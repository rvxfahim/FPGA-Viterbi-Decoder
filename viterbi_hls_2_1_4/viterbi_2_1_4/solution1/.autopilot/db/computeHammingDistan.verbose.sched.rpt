

================================================================
== Vivado HLS Report for 'computeHammingDistan'
================================================================
* Date:           Thu Jul 28 06:40:25 2022

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        viterbi_2_1_4
* Solution:       solution1
* Product family: spartan7
* Target device:  xc7s100-fgga676-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     7.377|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |   16|   16|   17|   17| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 1
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 17, depth = 17


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 17
* Pipeline : 1
  Pipeline-0 : II = 17, D = 17, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.98>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecFUCore([8 x i8]* %HammingTable_hammingDistances_finalStates, [1 x i8]* @p_str, [7 x i8]* @p_str2, [1 x i8]* @p_str, i32 1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 18 'specfucore' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%HammingTable_step_re = call i4 @_ssdm_op_Read.ap_auto.i4(i4 %HammingTable_step_read)" [viterbi_2_1_4/viterbi.cpp:247]   --->   Operation 19 'read' 'HammingTable_step_re' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%p_read_9 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %p_read723)" [viterbi_2_1_4/viterbi.cpp:247]   --->   Operation 20 'read' 'p_read_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%p_read_10 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %p_read622)" [viterbi_2_1_4/viterbi.cpp:247]   --->   Operation 21 'read' 'p_read_10' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%p_read_11 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %p_read521)" [viterbi_2_1_4/viterbi.cpp:247]   --->   Operation 22 'read' 'p_read_11' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%p_read_12 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %p_read420)" [viterbi_2_1_4/viterbi.cpp:247]   --->   Operation 23 'read' 'p_read_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%p_read_13 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %p_read319)" [viterbi_2_1_4/viterbi.cpp:247]   --->   Operation 24 'read' 'p_read_13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%p_read_14 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %p_read218)" [viterbi_2_1_4/viterbi.cpp:247]   --->   Operation 25 'read' 'p_read_14' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%p_read_15 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %p_read119)" [viterbi_2_1_4/viterbi.cpp:247]   --->   Operation 26 'read' 'p_read_15' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%p_read_16 = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %p_read18)" [viterbi_2_1_4/viterbi.cpp:247]   --->   Operation 27 'read' 'p_read_16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%p_read13 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %p_read1)" [viterbi_2_1_4/viterbi.cpp:247]   --->   Operation 28 'read' 'p_read13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%p_read_17 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %p_read)" [viterbi_2_1_4/viterbi.cpp:247]   --->   Operation 29 'read' 'p_read_17' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%trunc_ln257 = trunc i4 %HammingTable_step_re to i3" [viterbi_2_1_4/viterbi.cpp:257]   --->   Operation 30 'trunc' 'trunc_ln257' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.98ns)   --->   "%icmp_ln257 = icmp eq i3 %trunc_ln257, 1" [viterbi_2_1_4/viterbi.cpp:257]   --->   Operation 31 'icmp' 'icmp_ln257' <Predicate = true> <Delay = 0.98> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "br i1 %icmp_ln257, label %1, label %2" [viterbi_2_1_4/viterbi.cpp:257]   --->   Operation 32 'br' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.98ns)   --->   "%icmp_ln261 = icmp eq i3 %trunc_ln257, 2" [viterbi_2_1_4/viterbi.cpp:261]   --->   Operation 33 'icmp' 'icmp_ln261' <Predicate = (!icmp_ln257)> <Delay = 0.98> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "br i1 %icmp_ln261, label %3, label %4" [viterbi_2_1_4/viterbi.cpp:261]   --->   Operation 34 'br' <Predicate = (!icmp_ln257)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.98ns)   --->   "%icmp_ln266 = icmp eq i3 %trunc_ln257, 3" [viterbi_2_1_4/viterbi.cpp:266]   --->   Operation 35 'icmp' 'icmp_ln266' <Predicate = (!icmp_ln257 & !icmp_ln261)> <Delay = 0.98> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.98> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 5.19>
ST_2 : Operation 36 [2/2] (5.19ns)   --->   "%call_ret16 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @calculateForState(i1 %p_read_17, i1 %p_read13, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 %p_read_16, i8 %p_read_15, i8 %p_read_14, i8 %p_read_13, i8 %p_read_12, i8 %p_read_11, i8 %p_read_10, i8 %p_read_9, [8 x i8]* %HammingTable_hammingDistances_finalStates, i5 0)" [viterbi_2_1_4/viterbi.cpp:268]   --->   Operation 36 'call' 'call_ret16' <Predicate = (!icmp_ln257 & !icmp_ln261)> <Delay = 5.19> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 37 [2/2] (5.19ns)   --->   "%call_ret14 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @calculateForState(i1 %p_read_17, i1 %p_read13, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 %p_read_16, i8 %p_read_15, i8 %p_read_14, i8 %p_read_13, i8 %p_read_12, i8 %p_read_11, i8 %p_read_10, i8 %p_read_9, [8 x i8]* %HammingTable_hammingDistances_finalStates, i5 0)" [viterbi_2_1_4/viterbi.cpp:263]   --->   Operation 37 'call' 'call_ret14' <Predicate = (!icmp_ln257 & icmp_ln261)> <Delay = 5.19> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 38 [2/2] (5.19ns)   --->   "%call_ret13 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @calculateForState(i1 %p_read_17, i1 %p_read13, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 %p_read_16, i8 %p_read_15, i8 %p_read_14, i8 %p_read_13, i8 %p_read_12, i8 %p_read_11, i8 %p_read_10, i8 %p_read_9, [8 x i8]* %HammingTable_hammingDistances_finalStates, i5 0)" [viterbi_2_1_4/viterbi.cpp:259]   --->   Operation 38 'call' 'call_ret13' <Predicate = (icmp_ln257)> <Delay = 5.19> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 3 <SV = 2> <Delay = 5.84>
ST_3 : Operation 39 [1/2] (5.84ns)   --->   "%call_ret16 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @calculateForState(i1 %p_read_17, i1 %p_read13, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 %p_read_16, i8 %p_read_15, i8 %p_read_14, i8 %p_read_13, i8 %p_read_12, i8 %p_read_11, i8 %p_read_10, i8 %p_read_9, [8 x i8]* %HammingTable_hammingDistances_finalStates, i5 0)" [viterbi_2_1_4/viterbi.cpp:268]   --->   Operation 39 'call' 'call_ret16' <Predicate = (!icmp_ln257 & !icmp_ln261)> <Delay = 5.84> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%HammingTable_aTransi_6 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret16, 0" [viterbi_2_1_4/viterbi.cpp:268]   --->   Operation 40 'extractvalue' 'HammingTable_aTransi_6' <Predicate = (!icmp_ln257 & !icmp_ln261)> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%HammingTable_aTransi_7 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret16, 1" [viterbi_2_1_4/viterbi.cpp:268]   --->   Operation 41 'extractvalue' 'HammingTable_aTransi_7' <Predicate = (!icmp_ln257 & !icmp_ln261)> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%HammingTable_bTransi_2 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret16, 2" [viterbi_2_1_4/viterbi.cpp:268]   --->   Operation 42 'extractvalue' 'HammingTable_bTransi_2' <Predicate = (!icmp_ln257 & !icmp_ln261)> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%HammingTable_bTransi_3 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret16, 3" [viterbi_2_1_4/viterbi.cpp:268]   --->   Operation 43 'extractvalue' 'HammingTable_bTransi_3' <Predicate = (!icmp_ln257 & !icmp_ln261)> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%HammingTable_cTransi_6 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret16, 4" [viterbi_2_1_4/viterbi.cpp:268]   --->   Operation 44 'extractvalue' 'HammingTable_cTransi_6' <Predicate = (!icmp_ln257 & !icmp_ln261)> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%HammingTable_cTransi_7 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret16, 5" [viterbi_2_1_4/viterbi.cpp:268]   --->   Operation 45 'extractvalue' 'HammingTable_cTransi_7' <Predicate = (!icmp_ln257 & !icmp_ln261)> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%HammingTable_dTransi_2 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret16, 6" [viterbi_2_1_4/viterbi.cpp:268]   --->   Operation 46 'extractvalue' 'HammingTable_dTransi_2' <Predicate = (!icmp_ln257 & !icmp_ln261)> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%HammingTable_dTransi_3 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret16, 7" [viterbi_2_1_4/viterbi.cpp:268]   --->   Operation 47 'extractvalue' 'HammingTable_dTransi_3' <Predicate = (!icmp_ln257 & !icmp_ln261)> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%HammingTable_eTransi_6 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret16, 8" [viterbi_2_1_4/viterbi.cpp:268]   --->   Operation 48 'extractvalue' 'HammingTable_eTransi_6' <Predicate = (!icmp_ln257 & !icmp_ln261)> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%HammingTable_eTransi_7 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret16, 9" [viterbi_2_1_4/viterbi.cpp:268]   --->   Operation 49 'extractvalue' 'HammingTable_eTransi_7' <Predicate = (!icmp_ln257 & !icmp_ln261)> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%HammingTable_fTransi_2 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret16, 10" [viterbi_2_1_4/viterbi.cpp:268]   --->   Operation 50 'extractvalue' 'HammingTable_fTransi_2' <Predicate = (!icmp_ln257 & !icmp_ln261)> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%HammingTable_fTransi_3 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret16, 11" [viterbi_2_1_4/viterbi.cpp:268]   --->   Operation 51 'extractvalue' 'HammingTable_fTransi_3' <Predicate = (!icmp_ln257 & !icmp_ln261)> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%HammingTable_gTransi_6 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret16, 12" [viterbi_2_1_4/viterbi.cpp:268]   --->   Operation 52 'extractvalue' 'HammingTable_gTransi_6' <Predicate = (!icmp_ln257 & !icmp_ln261)> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%HammingTable_gTransi_7 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret16, 13" [viterbi_2_1_4/viterbi.cpp:268]   --->   Operation 53 'extractvalue' 'HammingTable_gTransi_7' <Predicate = (!icmp_ln257 & !icmp_ln261)> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%HammingTable_hTransi_2 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret16, 14" [viterbi_2_1_4/viterbi.cpp:268]   --->   Operation 54 'extractvalue' 'HammingTable_hTransi_2' <Predicate = (!icmp_ln257 & !icmp_ln261)> <Delay = 0.00>
ST_3 : Operation 55 [1/1] (0.00ns)   --->   "%HammingTable_hTransi_3 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret16, 15" [viterbi_2_1_4/viterbi.cpp:268]   --->   Operation 55 'extractvalue' 'HammingTable_hTransi_3' <Predicate = (!icmp_ln257 & !icmp_ln261)> <Delay = 0.00>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "br i1 %icmp_ln266, label %5, label %6" [viterbi_2_1_4/viterbi.cpp:266]   --->   Operation 56 'br' <Predicate = (!icmp_ln257 & !icmp_ln261)> <Delay = 0.00>
ST_3 : Operation 57 [1/2] (5.84ns)   --->   "%call_ret14 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @calculateForState(i1 %p_read_17, i1 %p_read13, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 %p_read_16, i8 %p_read_15, i8 %p_read_14, i8 %p_read_13, i8 %p_read_12, i8 %p_read_11, i8 %p_read_10, i8 %p_read_9, [8 x i8]* %HammingTable_hammingDistances_finalStates, i5 0)" [viterbi_2_1_4/viterbi.cpp:263]   --->   Operation 57 'call' 'call_ret14' <Predicate = (!icmp_ln257 & icmp_ln261)> <Delay = 5.84> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%HammingTable_aTransi_2 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret14, 0" [viterbi_2_1_4/viterbi.cpp:263]   --->   Operation 58 'extractvalue' 'HammingTable_aTransi_2' <Predicate = (!icmp_ln257 & icmp_ln261)> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%HammingTable_aTransi_3 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret14, 1" [viterbi_2_1_4/viterbi.cpp:263]   --->   Operation 59 'extractvalue' 'HammingTable_aTransi_3' <Predicate = (!icmp_ln257 & icmp_ln261)> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%HammingTable_bTransi = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret14, 2" [viterbi_2_1_4/viterbi.cpp:263]   --->   Operation 60 'extractvalue' 'HammingTable_bTransi' <Predicate = (!icmp_ln257 & icmp_ln261)> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%HammingTable_bTransi_1 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret14, 3" [viterbi_2_1_4/viterbi.cpp:263]   --->   Operation 61 'extractvalue' 'HammingTable_bTransi_1' <Predicate = (!icmp_ln257 & icmp_ln261)> <Delay = 0.00>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "%HammingTable_cTransi_2 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret14, 4" [viterbi_2_1_4/viterbi.cpp:263]   --->   Operation 62 'extractvalue' 'HammingTable_cTransi_2' <Predicate = (!icmp_ln257 & icmp_ln261)> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (0.00ns)   --->   "%HammingTable_cTransi_3 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret14, 5" [viterbi_2_1_4/viterbi.cpp:263]   --->   Operation 63 'extractvalue' 'HammingTable_cTransi_3' <Predicate = (!icmp_ln257 & icmp_ln261)> <Delay = 0.00>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%HammingTable_dTransi = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret14, 6" [viterbi_2_1_4/viterbi.cpp:263]   --->   Operation 64 'extractvalue' 'HammingTable_dTransi' <Predicate = (!icmp_ln257 & icmp_ln261)> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%HammingTable_dTransi_1 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret14, 7" [viterbi_2_1_4/viterbi.cpp:263]   --->   Operation 65 'extractvalue' 'HammingTable_dTransi_1' <Predicate = (!icmp_ln257 & icmp_ln261)> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "%HammingTable_eTransi_2 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret14, 8" [viterbi_2_1_4/viterbi.cpp:263]   --->   Operation 66 'extractvalue' 'HammingTable_eTransi_2' <Predicate = (!icmp_ln257 & icmp_ln261)> <Delay = 0.00>
ST_3 : Operation 67 [1/1] (0.00ns)   --->   "%HammingTable_eTransi_3 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret14, 9" [viterbi_2_1_4/viterbi.cpp:263]   --->   Operation 67 'extractvalue' 'HammingTable_eTransi_3' <Predicate = (!icmp_ln257 & icmp_ln261)> <Delay = 0.00>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "%HammingTable_fTransi = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret14, 10" [viterbi_2_1_4/viterbi.cpp:263]   --->   Operation 68 'extractvalue' 'HammingTable_fTransi' <Predicate = (!icmp_ln257 & icmp_ln261)> <Delay = 0.00>
ST_3 : Operation 69 [1/1] (0.00ns)   --->   "%HammingTable_fTransi_1 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret14, 11" [viterbi_2_1_4/viterbi.cpp:263]   --->   Operation 69 'extractvalue' 'HammingTable_fTransi_1' <Predicate = (!icmp_ln257 & icmp_ln261)> <Delay = 0.00>
ST_3 : Operation 70 [1/1] (0.00ns)   --->   "%HammingTable_gTransi_2 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret14, 12" [viterbi_2_1_4/viterbi.cpp:263]   --->   Operation 70 'extractvalue' 'HammingTable_gTransi_2' <Predicate = (!icmp_ln257 & icmp_ln261)> <Delay = 0.00>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "%HammingTable_gTransi_3 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret14, 13" [viterbi_2_1_4/viterbi.cpp:263]   --->   Operation 71 'extractvalue' 'HammingTable_gTransi_3' <Predicate = (!icmp_ln257 & icmp_ln261)> <Delay = 0.00>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%HammingTable_hTransi = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret14, 14" [viterbi_2_1_4/viterbi.cpp:263]   --->   Operation 72 'extractvalue' 'HammingTable_hTransi' <Predicate = (!icmp_ln257 & icmp_ln261)> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%HammingTable_hTransi_1 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret14, 15" [viterbi_2_1_4/viterbi.cpp:263]   --->   Operation 73 'extractvalue' 'HammingTable_hTransi_1' <Predicate = (!icmp_ln257 & icmp_ln261)> <Delay = 0.00>
ST_3 : Operation 74 [1/2] (5.84ns)   --->   "%call_ret13 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @calculateForState(i1 %p_read_17, i1 %p_read13, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 %p_read_16, i8 %p_read_15, i8 %p_read_14, i8 %p_read_13, i8 %p_read_12, i8 %p_read_11, i8 %p_read_10, i8 %p_read_9, [8 x i8]* %HammingTable_hammingDistances_finalStates, i5 0)" [viterbi_2_1_4/viterbi.cpp:259]   --->   Operation 74 'call' 'call_ret13' <Predicate = (icmp_ln257)> <Delay = 5.84> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_3 : Operation 75 [1/1] (0.00ns)   --->   "%HammingTable_aTransi = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret13, 0" [viterbi_2_1_4/viterbi.cpp:259]   --->   Operation 75 'extractvalue' 'HammingTable_aTransi' <Predicate = (icmp_ln257)> <Delay = 0.00>
ST_3 : Operation 76 [1/1] (0.00ns)   --->   "%HammingTable_aTransi_1 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret13, 1" [viterbi_2_1_4/viterbi.cpp:259]   --->   Operation 76 'extractvalue' 'HammingTable_aTransi_1' <Predicate = (icmp_ln257)> <Delay = 0.00>
ST_3 : Operation 77 [1/1] (0.00ns)   --->   "%HammingTable_cTransi = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret13, 4" [viterbi_2_1_4/viterbi.cpp:259]   --->   Operation 77 'extractvalue' 'HammingTable_cTransi' <Predicate = (icmp_ln257)> <Delay = 0.00>
ST_3 : Operation 78 [1/1] (0.00ns)   --->   "%HammingTable_cTransi_1 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret13, 5" [viterbi_2_1_4/viterbi.cpp:259]   --->   Operation 78 'extractvalue' 'HammingTable_cTransi_1' <Predicate = (icmp_ln257)> <Delay = 0.00>
ST_3 : Operation 79 [1/1] (0.00ns)   --->   "%HammingTable_eTransi = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret13, 8" [viterbi_2_1_4/viterbi.cpp:259]   --->   Operation 79 'extractvalue' 'HammingTable_eTransi' <Predicate = (icmp_ln257)> <Delay = 0.00>
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "%HammingTable_eTransi_1 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret13, 9" [viterbi_2_1_4/viterbi.cpp:259]   --->   Operation 80 'extractvalue' 'HammingTable_eTransi_1' <Predicate = (icmp_ln257)> <Delay = 0.00>
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "%HammingTable_gTransi = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret13, 12" [viterbi_2_1_4/viterbi.cpp:259]   --->   Operation 81 'extractvalue' 'HammingTable_gTransi' <Predicate = (icmp_ln257)> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (0.00ns)   --->   "%HammingTable_gTransi_1 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret13, 13" [viterbi_2_1_4/viterbi.cpp:259]   --->   Operation 82 'extractvalue' 'HammingTable_gTransi_1' <Predicate = (icmp_ln257)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 5.19>
ST_4 : Operation 83 [2/2] (5.19ns)   --->   "%call_ret20 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @calculateForState(i1 %p_read_17, i1 %p_read13, i8 %HammingTable_aTransi_6, i8 %HammingTable_aTransi_7, i8 %HammingTable_bTransi_2, i8 %HammingTable_bTransi_3, i8 %HammingTable_cTransi_6, i8 %HammingTable_cTransi_7, i8 %HammingTable_dTransi_2, i8 %HammingTable_dTransi_3, i8 %HammingTable_eTransi_6, i8 %HammingTable_eTransi_7, i8 %HammingTable_fTransi_2, i8 %HammingTable_fTransi_3, i8 %HammingTable_gTransi_6, i8 %HammingTable_gTransi_7, i8 %HammingTable_hTransi_2, i8 %HammingTable_hTransi_3, i8 %p_read_16, i8 %p_read_15, i8 %p_read_14, i8 %p_read_13, i8 %p_read_12, i8 %p_read_11, i8 %p_read_10, i8 %p_read_9, [8 x i8]* %HammingTable_hammingDistances_finalStates, i5 1)" [viterbi_2_1_4/viterbi.cpp:276]   --->   Operation 83 'call' 'call_ret20' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 5.19> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 84 [2/2] (5.19ns)   --->   "%call_ret17 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @calculateForState(i1 %p_read_17, i1 %p_read13, i8 %HammingTable_aTransi_6, i8 %HammingTable_aTransi_7, i8 %HammingTable_bTransi_2, i8 %HammingTable_bTransi_3, i8 %HammingTable_cTransi_6, i8 %HammingTable_cTransi_7, i8 %HammingTable_dTransi_2, i8 %HammingTable_dTransi_3, i8 %HammingTable_eTransi_6, i8 %HammingTable_eTransi_7, i8 %HammingTable_fTransi_2, i8 %HammingTable_fTransi_3, i8 %HammingTable_gTransi_6, i8 %HammingTable_gTransi_7, i8 %HammingTable_hTransi_2, i8 %HammingTable_hTransi_3, i8 %p_read_16, i8 %p_read_15, i8 %p_read_14, i8 %p_read_13, i8 %p_read_12, i8 %p_read_11, i8 %p_read_10, i8 %p_read_9, [8 x i8]* %HammingTable_hammingDistances_finalStates, i5 2)" [viterbi_2_1_4/viterbi.cpp:269]   --->   Operation 84 'call' 'call_ret17' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 5.19> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 85 [2/2] (5.19ns)   --->   "%call_ret15 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @calculateForState(i1 %p_read_17, i1 %p_read13, i8 %HammingTable_aTransi_2, i8 %HammingTable_aTransi_3, i8 %HammingTable_bTransi, i8 %HammingTable_bTransi_1, i8 %HammingTable_cTransi_2, i8 %HammingTable_cTransi_3, i8 %HammingTable_dTransi, i8 %HammingTable_dTransi_1, i8 %HammingTable_eTransi_2, i8 %HammingTable_eTransi_3, i8 %HammingTable_fTransi, i8 %HammingTable_fTransi_1, i8 %HammingTable_gTransi_2, i8 %HammingTable_gTransi_3, i8 %HammingTable_hTransi, i8 %HammingTable_hTransi_1, i8 %p_read_16, i8 %p_read_15, i8 %p_read_14, i8 %p_read_13, i8 %p_read_12, i8 %p_read_11, i8 %p_read_10, i8 %p_read_9, [8 x i8]* %HammingTable_hammingDistances_finalStates, i5 4)" [viterbi_2_1_4/viterbi.cpp:264]   --->   Operation 85 'call' 'call_ret15' <Predicate = (!icmp_ln257 & icmp_ln261)> <Delay = 5.19> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 4> <Delay = 5.84>
ST_5 : Operation 86 [1/2] (5.84ns)   --->   "%call_ret20 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @calculateForState(i1 %p_read_17, i1 %p_read13, i8 %HammingTable_aTransi_6, i8 %HammingTable_aTransi_7, i8 %HammingTable_bTransi_2, i8 %HammingTable_bTransi_3, i8 %HammingTable_cTransi_6, i8 %HammingTable_cTransi_7, i8 %HammingTable_dTransi_2, i8 %HammingTable_dTransi_3, i8 %HammingTable_eTransi_6, i8 %HammingTable_eTransi_7, i8 %HammingTable_fTransi_2, i8 %HammingTable_fTransi_3, i8 %HammingTable_gTransi_6, i8 %HammingTable_gTransi_7, i8 %HammingTable_hTransi_2, i8 %HammingTable_hTransi_3, i8 %p_read_16, i8 %p_read_15, i8 %p_read_14, i8 %p_read_13, i8 %p_read_12, i8 %p_read_11, i8 %p_read_10, i8 %p_read_9, [8 x i8]* %HammingTable_hammingDistances_finalStates, i5 1)" [viterbi_2_1_4/viterbi.cpp:276]   --->   Operation 86 'call' 'call_ret20' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 5.84> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 87 [1/1] (0.00ns)   --->   "%HammingTable_aTransi_13 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret20, 0" [viterbi_2_1_4/viterbi.cpp:276]   --->   Operation 87 'extractvalue' 'HammingTable_aTransi_13' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_5 : Operation 88 [1/1] (0.00ns)   --->   "%HammingTable_aTransi_14 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret20, 1" [viterbi_2_1_4/viterbi.cpp:276]   --->   Operation 88 'extractvalue' 'HammingTable_aTransi_14' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_5 : Operation 89 [1/1] (0.00ns)   --->   "%HammingTable_bTransi_8 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret20, 2" [viterbi_2_1_4/viterbi.cpp:276]   --->   Operation 89 'extractvalue' 'HammingTable_bTransi_8' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_5 : Operation 90 [1/1] (0.00ns)   --->   "%HammingTable_bTransi_9 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret20, 3" [viterbi_2_1_4/viterbi.cpp:276]   --->   Operation 90 'extractvalue' 'HammingTable_bTransi_9' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_5 : Operation 91 [1/1] (0.00ns)   --->   "%HammingTable_cTransi_13 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret20, 4" [viterbi_2_1_4/viterbi.cpp:276]   --->   Operation 91 'extractvalue' 'HammingTable_cTransi_13' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_5 : Operation 92 [1/1] (0.00ns)   --->   "%HammingTable_cTransi_14 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret20, 5" [viterbi_2_1_4/viterbi.cpp:276]   --->   Operation 92 'extractvalue' 'HammingTable_cTransi_14' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_5 : Operation 93 [1/1] (0.00ns)   --->   "%HammingTable_dTransi_8 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret20, 6" [viterbi_2_1_4/viterbi.cpp:276]   --->   Operation 93 'extractvalue' 'HammingTable_dTransi_8' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_5 : Operation 94 [1/1] (0.00ns)   --->   "%HammingTable_dTransi_9 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret20, 7" [viterbi_2_1_4/viterbi.cpp:276]   --->   Operation 94 'extractvalue' 'HammingTable_dTransi_9' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_5 : Operation 95 [1/1] (0.00ns)   --->   "%HammingTable_eTransi_13 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret20, 8" [viterbi_2_1_4/viterbi.cpp:276]   --->   Operation 95 'extractvalue' 'HammingTable_eTransi_13' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_5 : Operation 96 [1/1] (0.00ns)   --->   "%HammingTable_eTransi_14 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret20, 9" [viterbi_2_1_4/viterbi.cpp:276]   --->   Operation 96 'extractvalue' 'HammingTable_eTransi_14' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_5 : Operation 97 [1/1] (0.00ns)   --->   "%HammingTable_fTransi_8 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret20, 10" [viterbi_2_1_4/viterbi.cpp:276]   --->   Operation 97 'extractvalue' 'HammingTable_fTransi_8' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_5 : Operation 98 [1/1] (0.00ns)   --->   "%HammingTable_fTransi_9 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret20, 11" [viterbi_2_1_4/viterbi.cpp:276]   --->   Operation 98 'extractvalue' 'HammingTable_fTransi_9' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_5 : Operation 99 [1/1] (0.00ns)   --->   "%HammingTable_gTransi_13 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret20, 12" [viterbi_2_1_4/viterbi.cpp:276]   --->   Operation 99 'extractvalue' 'HammingTable_gTransi_13' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_5 : Operation 100 [1/1] (0.00ns)   --->   "%HammingTable_gTransi_14 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret20, 13" [viterbi_2_1_4/viterbi.cpp:276]   --->   Operation 100 'extractvalue' 'HammingTable_gTransi_14' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_5 : Operation 101 [1/1] (0.00ns)   --->   "%HammingTable_hTransi_8 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret20, 14" [viterbi_2_1_4/viterbi.cpp:276]   --->   Operation 101 'extractvalue' 'HammingTable_hTransi_8' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_5 : Operation 102 [1/1] (0.00ns)   --->   "%HammingTable_hTransi_9 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret20, 15" [viterbi_2_1_4/viterbi.cpp:276]   --->   Operation 102 'extractvalue' 'HammingTable_hTransi_9' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_5 : Operation 103 [1/2] (5.84ns)   --->   "%call_ret17 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @calculateForState(i1 %p_read_17, i1 %p_read13, i8 %HammingTable_aTransi_6, i8 %HammingTable_aTransi_7, i8 %HammingTable_bTransi_2, i8 %HammingTable_bTransi_3, i8 %HammingTable_cTransi_6, i8 %HammingTable_cTransi_7, i8 %HammingTable_dTransi_2, i8 %HammingTable_dTransi_3, i8 %HammingTable_eTransi_6, i8 %HammingTable_eTransi_7, i8 %HammingTable_fTransi_2, i8 %HammingTable_fTransi_3, i8 %HammingTable_gTransi_6, i8 %HammingTable_gTransi_7, i8 %HammingTable_hTransi_2, i8 %HammingTable_hTransi_3, i8 %p_read_16, i8 %p_read_15, i8 %p_read_14, i8 %p_read_13, i8 %p_read_12, i8 %p_read_11, i8 %p_read_10, i8 %p_read_9, [8 x i8]* %HammingTable_hammingDistances_finalStates, i5 2)" [viterbi_2_1_4/viterbi.cpp:269]   --->   Operation 103 'call' 'call_ret17' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 5.84> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 104 [1/1] (0.00ns)   --->   "%HammingTable_aTransi_8 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret17, 0" [viterbi_2_1_4/viterbi.cpp:269]   --->   Operation 104 'extractvalue' 'HammingTable_aTransi_8' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_5 : Operation 105 [1/1] (0.00ns)   --->   "%HammingTable_aTransi_9 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret17, 1" [viterbi_2_1_4/viterbi.cpp:269]   --->   Operation 105 'extractvalue' 'HammingTable_aTransi_9' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_5 : Operation 106 [1/1] (0.00ns)   --->   "%HammingTable_bTransi_4 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret17, 2" [viterbi_2_1_4/viterbi.cpp:269]   --->   Operation 106 'extractvalue' 'HammingTable_bTransi_4' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_5 : Operation 107 [1/1] (0.00ns)   --->   "%HammingTable_bTransi_5 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret17, 3" [viterbi_2_1_4/viterbi.cpp:269]   --->   Operation 107 'extractvalue' 'HammingTable_bTransi_5' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_5 : Operation 108 [1/1] (0.00ns)   --->   "%HammingTable_cTransi_8 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret17, 4" [viterbi_2_1_4/viterbi.cpp:269]   --->   Operation 108 'extractvalue' 'HammingTable_cTransi_8' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_5 : Operation 109 [1/1] (0.00ns)   --->   "%HammingTable_cTransi_9 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret17, 5" [viterbi_2_1_4/viterbi.cpp:269]   --->   Operation 109 'extractvalue' 'HammingTable_cTransi_9' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_5 : Operation 110 [1/1] (0.00ns)   --->   "%HammingTable_dTransi_4 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret17, 6" [viterbi_2_1_4/viterbi.cpp:269]   --->   Operation 110 'extractvalue' 'HammingTable_dTransi_4' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_5 : Operation 111 [1/1] (0.00ns)   --->   "%HammingTable_dTransi_5 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret17, 7" [viterbi_2_1_4/viterbi.cpp:269]   --->   Operation 111 'extractvalue' 'HammingTable_dTransi_5' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_5 : Operation 112 [1/1] (0.00ns)   --->   "%HammingTable_eTransi_8 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret17, 8" [viterbi_2_1_4/viterbi.cpp:269]   --->   Operation 112 'extractvalue' 'HammingTable_eTransi_8' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_5 : Operation 113 [1/1] (0.00ns)   --->   "%HammingTable_eTransi_9 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret17, 9" [viterbi_2_1_4/viterbi.cpp:269]   --->   Operation 113 'extractvalue' 'HammingTable_eTransi_9' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_5 : Operation 114 [1/1] (0.00ns)   --->   "%HammingTable_fTransi_4 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret17, 10" [viterbi_2_1_4/viterbi.cpp:269]   --->   Operation 114 'extractvalue' 'HammingTable_fTransi_4' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_5 : Operation 115 [1/1] (0.00ns)   --->   "%HammingTable_fTransi_5 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret17, 11" [viterbi_2_1_4/viterbi.cpp:269]   --->   Operation 115 'extractvalue' 'HammingTable_fTransi_5' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_5 : Operation 116 [1/1] (0.00ns)   --->   "%HammingTable_gTransi_8 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret17, 12" [viterbi_2_1_4/viterbi.cpp:269]   --->   Operation 116 'extractvalue' 'HammingTable_gTransi_8' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_5 : Operation 117 [1/1] (0.00ns)   --->   "%HammingTable_gTransi_9 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret17, 13" [viterbi_2_1_4/viterbi.cpp:269]   --->   Operation 117 'extractvalue' 'HammingTable_gTransi_9' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_5 : Operation 118 [1/1] (0.00ns)   --->   "%HammingTable_hTransi_4 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret17, 14" [viterbi_2_1_4/viterbi.cpp:269]   --->   Operation 118 'extractvalue' 'HammingTable_hTransi_4' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_5 : Operation 119 [1/1] (0.00ns)   --->   "%HammingTable_hTransi_5 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret17, 15" [viterbi_2_1_4/viterbi.cpp:269]   --->   Operation 119 'extractvalue' 'HammingTable_hTransi_5' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_5 : Operation 120 [1/2] (5.84ns)   --->   "%call_ret15 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @calculateForState(i1 %p_read_17, i1 %p_read13, i8 %HammingTable_aTransi_2, i8 %HammingTable_aTransi_3, i8 %HammingTable_bTransi, i8 %HammingTable_bTransi_1, i8 %HammingTable_cTransi_2, i8 %HammingTable_cTransi_3, i8 %HammingTable_dTransi, i8 %HammingTable_dTransi_1, i8 %HammingTable_eTransi_2, i8 %HammingTable_eTransi_3, i8 %HammingTable_fTransi, i8 %HammingTable_fTransi_1, i8 %HammingTable_gTransi_2, i8 %HammingTable_gTransi_3, i8 %HammingTable_hTransi, i8 %HammingTable_hTransi_1, i8 %p_read_16, i8 %p_read_15, i8 %p_read_14, i8 %p_read_13, i8 %p_read_12, i8 %p_read_11, i8 %p_read_10, i8 %p_read_9, [8 x i8]* %HammingTable_hammingDistances_finalStates, i5 4)" [viterbi_2_1_4/viterbi.cpp:264]   --->   Operation 120 'call' 'call_ret15' <Predicate = (!icmp_ln257 & icmp_ln261)> <Delay = 5.84> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 121 [1/1] (0.00ns)   --->   "%HammingTable_aTransi_4 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret15, 0" [viterbi_2_1_4/viterbi.cpp:264]   --->   Operation 121 'extractvalue' 'HammingTable_aTransi_4' <Predicate = (!icmp_ln257 & icmp_ln261)> <Delay = 0.00>
ST_5 : Operation 122 [1/1] (0.00ns)   --->   "%HammingTable_aTransi_5 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret15, 1" [viterbi_2_1_4/viterbi.cpp:264]   --->   Operation 122 'extractvalue' 'HammingTable_aTransi_5' <Predicate = (!icmp_ln257 & icmp_ln261)> <Delay = 0.00>
ST_5 : Operation 123 [1/1] (0.00ns)   --->   "%HammingTable_cTransi_4 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret15, 4" [viterbi_2_1_4/viterbi.cpp:264]   --->   Operation 123 'extractvalue' 'HammingTable_cTransi_4' <Predicate = (!icmp_ln257 & icmp_ln261)> <Delay = 0.00>
ST_5 : Operation 124 [1/1] (0.00ns)   --->   "%HammingTable_cTransi_5 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret15, 5" [viterbi_2_1_4/viterbi.cpp:264]   --->   Operation 124 'extractvalue' 'HammingTable_cTransi_5' <Predicate = (!icmp_ln257 & icmp_ln261)> <Delay = 0.00>
ST_5 : Operation 125 [1/1] (0.00ns)   --->   "%HammingTable_eTransi_4 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret15, 8" [viterbi_2_1_4/viterbi.cpp:264]   --->   Operation 125 'extractvalue' 'HammingTable_eTransi_4' <Predicate = (!icmp_ln257 & icmp_ln261)> <Delay = 0.00>
ST_5 : Operation 126 [1/1] (0.00ns)   --->   "%HammingTable_eTransi_5 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret15, 9" [viterbi_2_1_4/viterbi.cpp:264]   --->   Operation 126 'extractvalue' 'HammingTable_eTransi_5' <Predicate = (!icmp_ln257 & icmp_ln261)> <Delay = 0.00>
ST_5 : Operation 127 [1/1] (0.00ns)   --->   "%HammingTable_gTransi_4 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret15, 12" [viterbi_2_1_4/viterbi.cpp:264]   --->   Operation 127 'extractvalue' 'HammingTable_gTransi_4' <Predicate = (!icmp_ln257 & icmp_ln261)> <Delay = 0.00>
ST_5 : Operation 128 [1/1] (0.00ns)   --->   "%HammingTable_gTransi_5 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret15, 13" [viterbi_2_1_4/viterbi.cpp:264]   --->   Operation 128 'extractvalue' 'HammingTable_gTransi_5' <Predicate = (!icmp_ln257 & icmp_ln261)> <Delay = 0.00>

State 6 <SV = 5> <Delay = 5.19>
ST_6 : Operation 129 [2/2] (5.19ns)   --->   "%call_ret21 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @calculateForState(i1 %p_read_17, i1 %p_read13, i8 %HammingTable_aTransi_13, i8 %HammingTable_aTransi_14, i8 %HammingTable_bTransi_8, i8 %HammingTable_bTransi_9, i8 %HammingTable_cTransi_13, i8 %HammingTable_cTransi_14, i8 %HammingTable_dTransi_8, i8 %HammingTable_dTransi_9, i8 %HammingTable_eTransi_13, i8 %HammingTable_eTransi_14, i8 %HammingTable_fTransi_8, i8 %HammingTable_fTransi_9, i8 %HammingTable_gTransi_13, i8 %HammingTable_gTransi_14, i8 %HammingTable_hTransi_8, i8 %HammingTable_hTransi_9, i8 %p_read_16, i8 %p_read_15, i8 %p_read_14, i8 %p_read_13, i8 %p_read_12, i8 %p_read_11, i8 %p_read_10, i8 %p_read_9, [8 x i8]* %HammingTable_hammingDistances_finalStates, i5 2)" [viterbi_2_1_4/viterbi.cpp:277]   --->   Operation 129 'call' 'call_ret21' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 5.19> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 130 [2/2] (5.19ns)   --->   "%call_ret18 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @calculateForState(i1 %p_read_17, i1 %p_read13, i8 %HammingTable_aTransi_8, i8 %HammingTable_aTransi_9, i8 %HammingTable_bTransi_4, i8 %HammingTable_bTransi_5, i8 %HammingTable_cTransi_8, i8 %HammingTable_cTransi_9, i8 %HammingTable_dTransi_4, i8 %HammingTable_dTransi_5, i8 %HammingTable_eTransi_8, i8 %HammingTable_eTransi_9, i8 %HammingTable_fTransi_4, i8 %HammingTable_fTransi_5, i8 %HammingTable_gTransi_8, i8 %HammingTable_gTransi_9, i8 %HammingTable_hTransi_4, i8 %HammingTable_hTransi_5, i8 %p_read_16, i8 %p_read_15, i8 %p_read_14, i8 %p_read_13, i8 %p_read_12, i8 %p_read_11, i8 %p_read_10, i8 %p_read_9, [8 x i8]* %HammingTable_hammingDistances_finalStates, i5 4)" [viterbi_2_1_4/viterbi.cpp:270]   --->   Operation 130 'call' 'call_ret18' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 5.19> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 7 <SV = 6> <Delay = 5.84>
ST_7 : Operation 131 [1/2] (5.84ns)   --->   "%call_ret21 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @calculateForState(i1 %p_read_17, i1 %p_read13, i8 %HammingTable_aTransi_13, i8 %HammingTable_aTransi_14, i8 %HammingTable_bTransi_8, i8 %HammingTable_bTransi_9, i8 %HammingTable_cTransi_13, i8 %HammingTable_cTransi_14, i8 %HammingTable_dTransi_8, i8 %HammingTable_dTransi_9, i8 %HammingTable_eTransi_13, i8 %HammingTable_eTransi_14, i8 %HammingTable_fTransi_8, i8 %HammingTable_fTransi_9, i8 %HammingTable_gTransi_13, i8 %HammingTable_gTransi_14, i8 %HammingTable_hTransi_8, i8 %HammingTable_hTransi_9, i8 %p_read_16, i8 %p_read_15, i8 %p_read_14, i8 %p_read_13, i8 %p_read_12, i8 %p_read_11, i8 %p_read_10, i8 %p_read_9, [8 x i8]* %HammingTable_hammingDistances_finalStates, i5 2)" [viterbi_2_1_4/viterbi.cpp:277]   --->   Operation 131 'call' 'call_ret21' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 5.84> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_7 : Operation 132 [1/1] (0.00ns)   --->   "%HammingTable_aTransi_15 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret21, 0" [viterbi_2_1_4/viterbi.cpp:277]   --->   Operation 132 'extractvalue' 'HammingTable_aTransi_15' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_7 : Operation 133 [1/1] (0.00ns)   --->   "%HammingTable_aTransi_16 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret21, 1" [viterbi_2_1_4/viterbi.cpp:277]   --->   Operation 133 'extractvalue' 'HammingTable_aTransi_16' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_7 : Operation 134 [1/1] (0.00ns)   --->   "%HammingTable_bTransi_19 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret21, 2" [viterbi_2_1_4/viterbi.cpp:277]   --->   Operation 134 'extractvalue' 'HammingTable_bTransi_19' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_7 : Operation 135 [1/1] (0.00ns)   --->   "%HammingTable_bTransi_10 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret21, 3" [viterbi_2_1_4/viterbi.cpp:277]   --->   Operation 135 'extractvalue' 'HammingTable_bTransi_10' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_7 : Operation 136 [1/1] (0.00ns)   --->   "%HammingTable_cTransi_15 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret21, 4" [viterbi_2_1_4/viterbi.cpp:277]   --->   Operation 136 'extractvalue' 'HammingTable_cTransi_15' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_7 : Operation 137 [1/1] (0.00ns)   --->   "%HammingTable_cTransi_16 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret21, 5" [viterbi_2_1_4/viterbi.cpp:277]   --->   Operation 137 'extractvalue' 'HammingTable_cTransi_16' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_7 : Operation 138 [1/1] (0.00ns)   --->   "%HammingTable_dTransi_19 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret21, 6" [viterbi_2_1_4/viterbi.cpp:277]   --->   Operation 138 'extractvalue' 'HammingTable_dTransi_19' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_7 : Operation 139 [1/1] (0.00ns)   --->   "%HammingTable_dTransi_10 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret21, 7" [viterbi_2_1_4/viterbi.cpp:277]   --->   Operation 139 'extractvalue' 'HammingTable_dTransi_10' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_7 : Operation 140 [1/1] (0.00ns)   --->   "%HammingTable_eTransi_15 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret21, 8" [viterbi_2_1_4/viterbi.cpp:277]   --->   Operation 140 'extractvalue' 'HammingTable_eTransi_15' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_7 : Operation 141 [1/1] (0.00ns)   --->   "%HammingTable_eTransi_16 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret21, 9" [viterbi_2_1_4/viterbi.cpp:277]   --->   Operation 141 'extractvalue' 'HammingTable_eTransi_16' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_7 : Operation 142 [1/1] (0.00ns)   --->   "%HammingTable_fTransi_19 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret21, 10" [viterbi_2_1_4/viterbi.cpp:277]   --->   Operation 142 'extractvalue' 'HammingTable_fTransi_19' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_7 : Operation 143 [1/1] (0.00ns)   --->   "%HammingTable_fTransi_10 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret21, 11" [viterbi_2_1_4/viterbi.cpp:277]   --->   Operation 143 'extractvalue' 'HammingTable_fTransi_10' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_7 : Operation 144 [1/1] (0.00ns)   --->   "%HammingTable_gTransi_15 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret21, 12" [viterbi_2_1_4/viterbi.cpp:277]   --->   Operation 144 'extractvalue' 'HammingTable_gTransi_15' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_7 : Operation 145 [1/1] (0.00ns)   --->   "%HammingTable_gTransi_16 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret21, 13" [viterbi_2_1_4/viterbi.cpp:277]   --->   Operation 145 'extractvalue' 'HammingTable_gTransi_16' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_7 : Operation 146 [1/1] (0.00ns)   --->   "%HammingTable_hTransi_19 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret21, 14" [viterbi_2_1_4/viterbi.cpp:277]   --->   Operation 146 'extractvalue' 'HammingTable_hTransi_19' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_7 : Operation 147 [1/1] (0.00ns)   --->   "%HammingTable_hTransi_10 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret21, 15" [viterbi_2_1_4/viterbi.cpp:277]   --->   Operation 147 'extractvalue' 'HammingTable_hTransi_10' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_7 : Operation 148 [1/2] (5.84ns)   --->   "%call_ret18 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @calculateForState(i1 %p_read_17, i1 %p_read13, i8 %HammingTable_aTransi_8, i8 %HammingTable_aTransi_9, i8 %HammingTable_bTransi_4, i8 %HammingTable_bTransi_5, i8 %HammingTable_cTransi_8, i8 %HammingTable_cTransi_9, i8 %HammingTable_dTransi_4, i8 %HammingTable_dTransi_5, i8 %HammingTable_eTransi_8, i8 %HammingTable_eTransi_9, i8 %HammingTable_fTransi_4, i8 %HammingTable_fTransi_5, i8 %HammingTable_gTransi_8, i8 %HammingTable_gTransi_9, i8 %HammingTable_hTransi_4, i8 %HammingTable_hTransi_5, i8 %p_read_16, i8 %p_read_15, i8 %p_read_14, i8 %p_read_13, i8 %p_read_12, i8 %p_read_11, i8 %p_read_10, i8 %p_read_9, [8 x i8]* %HammingTable_hammingDistances_finalStates, i5 4)" [viterbi_2_1_4/viterbi.cpp:270]   --->   Operation 148 'call' 'call_ret18' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 5.84> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_7 : Operation 149 [1/1] (0.00ns)   --->   "%HammingTable_aTransi_27 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret18, 0" [viterbi_2_1_4/viterbi.cpp:270]   --->   Operation 149 'extractvalue' 'HammingTable_aTransi_27' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_7 : Operation 150 [1/1] (0.00ns)   --->   "%HammingTable_aTransi_10 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret18, 1" [viterbi_2_1_4/viterbi.cpp:270]   --->   Operation 150 'extractvalue' 'HammingTable_aTransi_10' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_7 : Operation 151 [1/1] (0.00ns)   --->   "%HammingTable_bTransi_6 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret18, 2" [viterbi_2_1_4/viterbi.cpp:270]   --->   Operation 151 'extractvalue' 'HammingTable_bTransi_6' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_7 : Operation 152 [1/1] (0.00ns)   --->   "%HammingTable_bTransi_7 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret18, 3" [viterbi_2_1_4/viterbi.cpp:270]   --->   Operation 152 'extractvalue' 'HammingTable_bTransi_7' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_7 : Operation 153 [1/1] (0.00ns)   --->   "%HammingTable_cTransi_27 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret18, 4" [viterbi_2_1_4/viterbi.cpp:270]   --->   Operation 153 'extractvalue' 'HammingTable_cTransi_27' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_7 : Operation 154 [1/1] (0.00ns)   --->   "%HammingTable_cTransi_10 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret18, 5" [viterbi_2_1_4/viterbi.cpp:270]   --->   Operation 154 'extractvalue' 'HammingTable_cTransi_10' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_7 : Operation 155 [1/1] (0.00ns)   --->   "%HammingTable_dTransi_6 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret18, 6" [viterbi_2_1_4/viterbi.cpp:270]   --->   Operation 155 'extractvalue' 'HammingTable_dTransi_6' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_7 : Operation 156 [1/1] (0.00ns)   --->   "%HammingTable_dTransi_7 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret18, 7" [viterbi_2_1_4/viterbi.cpp:270]   --->   Operation 156 'extractvalue' 'HammingTable_dTransi_7' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_7 : Operation 157 [1/1] (0.00ns)   --->   "%HammingTable_eTransi_27 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret18, 8" [viterbi_2_1_4/viterbi.cpp:270]   --->   Operation 157 'extractvalue' 'HammingTable_eTransi_27' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_7 : Operation 158 [1/1] (0.00ns)   --->   "%HammingTable_eTransi_10 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret18, 9" [viterbi_2_1_4/viterbi.cpp:270]   --->   Operation 158 'extractvalue' 'HammingTable_eTransi_10' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_7 : Operation 159 [1/1] (0.00ns)   --->   "%HammingTable_fTransi_6 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret18, 10" [viterbi_2_1_4/viterbi.cpp:270]   --->   Operation 159 'extractvalue' 'HammingTable_fTransi_6' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_7 : Operation 160 [1/1] (0.00ns)   --->   "%HammingTable_fTransi_7 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret18, 11" [viterbi_2_1_4/viterbi.cpp:270]   --->   Operation 160 'extractvalue' 'HammingTable_fTransi_7' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_7 : Operation 161 [1/1] (0.00ns)   --->   "%HammingTable_gTransi_27 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret18, 12" [viterbi_2_1_4/viterbi.cpp:270]   --->   Operation 161 'extractvalue' 'HammingTable_gTransi_27' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_7 : Operation 162 [1/1] (0.00ns)   --->   "%HammingTable_gTransi_10 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret18, 13" [viterbi_2_1_4/viterbi.cpp:270]   --->   Operation 162 'extractvalue' 'HammingTable_gTransi_10' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_7 : Operation 163 [1/1] (0.00ns)   --->   "%HammingTable_hTransi_6 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret18, 14" [viterbi_2_1_4/viterbi.cpp:270]   --->   Operation 163 'extractvalue' 'HammingTable_hTransi_6' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_7 : Operation 164 [1/1] (0.00ns)   --->   "%HammingTable_hTransi_7 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret18, 15" [viterbi_2_1_4/viterbi.cpp:270]   --->   Operation 164 'extractvalue' 'HammingTable_hTransi_7' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>

State 8 <SV = 7> <Delay = 5.19>
ST_8 : Operation 165 [2/2] (5.19ns)   --->   "%call_ret22 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @calculateForState(i1 %p_read_17, i1 %p_read13, i8 %HammingTable_aTransi_15, i8 %HammingTable_aTransi_16, i8 %HammingTable_bTransi_19, i8 %HammingTable_bTransi_10, i8 %HammingTable_cTransi_15, i8 %HammingTable_cTransi_16, i8 %HammingTable_dTransi_19, i8 %HammingTable_dTransi_10, i8 %HammingTable_eTransi_15, i8 %HammingTable_eTransi_16, i8 %HammingTable_fTransi_19, i8 %HammingTable_fTransi_10, i8 %HammingTable_gTransi_15, i8 %HammingTable_gTransi_16, i8 %HammingTable_hTransi_19, i8 %HammingTable_hTransi_10, i8 %p_read_16, i8 %p_read_15, i8 %p_read_14, i8 %p_read_13, i8 %p_read_12, i8 %p_read_11, i8 %p_read_10, i8 %p_read_9, [8 x i8]* %HammingTable_hammingDistances_finalStates, i5 3)" [viterbi_2_1_4/viterbi.cpp:278]   --->   Operation 165 'call' 'call_ret22' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 5.19> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_8 : Operation 166 [2/2] (5.19ns)   --->   "%call_ret19 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @calculateForState(i1 %p_read_17, i1 %p_read13, i8 %HammingTable_aTransi_27, i8 %HammingTable_aTransi_10, i8 %HammingTable_bTransi_6, i8 %HammingTable_bTransi_7, i8 %HammingTable_cTransi_27, i8 %HammingTable_cTransi_10, i8 %HammingTable_dTransi_6, i8 %HammingTable_dTransi_7, i8 %HammingTable_eTransi_27, i8 %HammingTable_eTransi_10, i8 %HammingTable_fTransi_6, i8 %HammingTable_fTransi_7, i8 %HammingTable_gTransi_27, i8 %HammingTable_gTransi_10, i8 %HammingTable_hTransi_6, i8 %HammingTable_hTransi_7, i8 %p_read_16, i8 %p_read_15, i8 %p_read_14, i8 %p_read_13, i8 %p_read_12, i8 %p_read_11, i8 %p_read_10, i8 %p_read_9, [8 x i8]* %HammingTable_hammingDistances_finalStates, i5 6)" [viterbi_2_1_4/viterbi.cpp:271]   --->   Operation 166 'call' 'call_ret19' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 5.19> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 9 <SV = 8> <Delay = 5.84>
ST_9 : Operation 167 [1/2] (5.84ns)   --->   "%call_ret22 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @calculateForState(i1 %p_read_17, i1 %p_read13, i8 %HammingTable_aTransi_15, i8 %HammingTable_aTransi_16, i8 %HammingTable_bTransi_19, i8 %HammingTable_bTransi_10, i8 %HammingTable_cTransi_15, i8 %HammingTable_cTransi_16, i8 %HammingTable_dTransi_19, i8 %HammingTable_dTransi_10, i8 %HammingTable_eTransi_15, i8 %HammingTable_eTransi_16, i8 %HammingTable_fTransi_19, i8 %HammingTable_fTransi_10, i8 %HammingTable_gTransi_15, i8 %HammingTable_gTransi_16, i8 %HammingTable_hTransi_19, i8 %HammingTable_hTransi_10, i8 %p_read_16, i8 %p_read_15, i8 %p_read_14, i8 %p_read_13, i8 %p_read_12, i8 %p_read_11, i8 %p_read_10, i8 %p_read_9, [8 x i8]* %HammingTable_hammingDistances_finalStates, i5 3)" [viterbi_2_1_4/viterbi.cpp:278]   --->   Operation 167 'call' 'call_ret22' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 5.84> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 168 [1/1] (0.00ns)   --->   "%HammingTable_aTransi_17 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret22, 0" [viterbi_2_1_4/viterbi.cpp:278]   --->   Operation 168 'extractvalue' 'HammingTable_aTransi_17' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_9 : Operation 169 [1/1] (0.00ns)   --->   "%HammingTable_aTransi_18 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret22, 1" [viterbi_2_1_4/viterbi.cpp:278]   --->   Operation 169 'extractvalue' 'HammingTable_aTransi_18' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_9 : Operation 170 [1/1] (0.00ns)   --->   "%HammingTable_bTransi_11 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret22, 2" [viterbi_2_1_4/viterbi.cpp:278]   --->   Operation 170 'extractvalue' 'HammingTable_bTransi_11' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_9 : Operation 171 [1/1] (0.00ns)   --->   "%HammingTable_bTransi_12 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret22, 3" [viterbi_2_1_4/viterbi.cpp:278]   --->   Operation 171 'extractvalue' 'HammingTable_bTransi_12' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_9 : Operation 172 [1/1] (0.00ns)   --->   "%HammingTable_cTransi_17 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret22, 4" [viterbi_2_1_4/viterbi.cpp:278]   --->   Operation 172 'extractvalue' 'HammingTable_cTransi_17' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_9 : Operation 173 [1/1] (0.00ns)   --->   "%HammingTable_cTransi_18 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret22, 5" [viterbi_2_1_4/viterbi.cpp:278]   --->   Operation 173 'extractvalue' 'HammingTable_cTransi_18' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_9 : Operation 174 [1/1] (0.00ns)   --->   "%HammingTable_dTransi_11 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret22, 6" [viterbi_2_1_4/viterbi.cpp:278]   --->   Operation 174 'extractvalue' 'HammingTable_dTransi_11' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_9 : Operation 175 [1/1] (0.00ns)   --->   "%HammingTable_dTransi_12 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret22, 7" [viterbi_2_1_4/viterbi.cpp:278]   --->   Operation 175 'extractvalue' 'HammingTable_dTransi_12' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_9 : Operation 176 [1/1] (0.00ns)   --->   "%HammingTable_eTransi_17 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret22, 8" [viterbi_2_1_4/viterbi.cpp:278]   --->   Operation 176 'extractvalue' 'HammingTable_eTransi_17' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_9 : Operation 177 [1/1] (0.00ns)   --->   "%HammingTable_eTransi_18 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret22, 9" [viterbi_2_1_4/viterbi.cpp:278]   --->   Operation 177 'extractvalue' 'HammingTable_eTransi_18' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_9 : Operation 178 [1/1] (0.00ns)   --->   "%HammingTable_fTransi_11 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret22, 10" [viterbi_2_1_4/viterbi.cpp:278]   --->   Operation 178 'extractvalue' 'HammingTable_fTransi_11' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_9 : Operation 179 [1/1] (0.00ns)   --->   "%HammingTable_fTransi_12 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret22, 11" [viterbi_2_1_4/viterbi.cpp:278]   --->   Operation 179 'extractvalue' 'HammingTable_fTransi_12' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_9 : Operation 180 [1/1] (0.00ns)   --->   "%HammingTable_gTransi_17 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret22, 12" [viterbi_2_1_4/viterbi.cpp:278]   --->   Operation 180 'extractvalue' 'HammingTable_gTransi_17' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_9 : Operation 181 [1/1] (0.00ns)   --->   "%HammingTable_gTransi_18 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret22, 13" [viterbi_2_1_4/viterbi.cpp:278]   --->   Operation 181 'extractvalue' 'HammingTable_gTransi_18' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_9 : Operation 182 [1/1] (0.00ns)   --->   "%HammingTable_hTransi_11 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret22, 14" [viterbi_2_1_4/viterbi.cpp:278]   --->   Operation 182 'extractvalue' 'HammingTable_hTransi_11' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_9 : Operation 183 [1/1] (0.00ns)   --->   "%HammingTable_hTransi_12 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret22, 15" [viterbi_2_1_4/viterbi.cpp:278]   --->   Operation 183 'extractvalue' 'HammingTable_hTransi_12' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_9 : Operation 184 [1/2] (5.84ns)   --->   "%call_ret19 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @calculateForState(i1 %p_read_17, i1 %p_read13, i8 %HammingTable_aTransi_27, i8 %HammingTable_aTransi_10, i8 %HammingTable_bTransi_6, i8 %HammingTable_bTransi_7, i8 %HammingTable_cTransi_27, i8 %HammingTable_cTransi_10, i8 %HammingTable_dTransi_6, i8 %HammingTable_dTransi_7, i8 %HammingTable_eTransi_27, i8 %HammingTable_eTransi_10, i8 %HammingTable_fTransi_6, i8 %HammingTable_fTransi_7, i8 %HammingTable_gTransi_27, i8 %HammingTable_gTransi_10, i8 %HammingTable_hTransi_6, i8 %HammingTable_hTransi_7, i8 %p_read_16, i8 %p_read_15, i8 %p_read_14, i8 %p_read_13, i8 %p_read_12, i8 %p_read_11, i8 %p_read_10, i8 %p_read_9, [8 x i8]* %HammingTable_hammingDistances_finalStates, i5 6)" [viterbi_2_1_4/viterbi.cpp:271]   --->   Operation 184 'call' 'call_ret19' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 5.84> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 185 [1/1] (0.00ns)   --->   "%HammingTable_aTransi_11 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret19, 0" [viterbi_2_1_4/viterbi.cpp:271]   --->   Operation 185 'extractvalue' 'HammingTable_aTransi_11' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_9 : Operation 186 [1/1] (0.00ns)   --->   "%HammingTable_aTransi_12 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret19, 1" [viterbi_2_1_4/viterbi.cpp:271]   --->   Operation 186 'extractvalue' 'HammingTable_aTransi_12' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_9 : Operation 187 [1/1] (0.00ns)   --->   "%HammingTable_cTransi_11 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret19, 4" [viterbi_2_1_4/viterbi.cpp:271]   --->   Operation 187 'extractvalue' 'HammingTable_cTransi_11' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_9 : Operation 188 [1/1] (0.00ns)   --->   "%HammingTable_cTransi_12 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret19, 5" [viterbi_2_1_4/viterbi.cpp:271]   --->   Operation 188 'extractvalue' 'HammingTable_cTransi_12' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_9 : Operation 189 [1/1] (0.00ns)   --->   "%HammingTable_eTransi_11 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret19, 8" [viterbi_2_1_4/viterbi.cpp:271]   --->   Operation 189 'extractvalue' 'HammingTable_eTransi_11' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_9 : Operation 190 [1/1] (0.00ns)   --->   "%HammingTable_eTransi_12 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret19, 9" [viterbi_2_1_4/viterbi.cpp:271]   --->   Operation 190 'extractvalue' 'HammingTable_eTransi_12' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_9 : Operation 191 [1/1] (0.00ns)   --->   "%HammingTable_gTransi_11 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret19, 12" [viterbi_2_1_4/viterbi.cpp:271]   --->   Operation 191 'extractvalue' 'HammingTable_gTransi_11' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>
ST_9 : Operation 192 [1/1] (0.00ns)   --->   "%HammingTable_gTransi_12 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret19, 13" [viterbi_2_1_4/viterbi.cpp:271]   --->   Operation 192 'extractvalue' 'HammingTable_gTransi_12' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 0.00>

State 10 <SV = 9> <Delay = 5.19>
ST_10 : Operation 193 [2/2] (5.19ns)   --->   "%call_ret23 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @calculateForState(i1 %p_read_17, i1 %p_read13, i8 %HammingTable_aTransi_17, i8 %HammingTable_aTransi_18, i8 %HammingTable_bTransi_11, i8 %HammingTable_bTransi_12, i8 %HammingTable_cTransi_17, i8 %HammingTable_cTransi_18, i8 %HammingTable_dTransi_11, i8 %HammingTable_dTransi_12, i8 %HammingTable_eTransi_17, i8 %HammingTable_eTransi_18, i8 %HammingTable_fTransi_11, i8 %HammingTable_fTransi_12, i8 %HammingTable_gTransi_17, i8 %HammingTable_gTransi_18, i8 %HammingTable_hTransi_11, i8 %HammingTable_hTransi_12, i8 %p_read_16, i8 %p_read_15, i8 %p_read_14, i8 %p_read_13, i8 %p_read_12, i8 %p_read_11, i8 %p_read_10, i8 %p_read_9, [8 x i8]* %HammingTable_hammingDistances_finalStates, i5 4)" [viterbi_2_1_4/viterbi.cpp:279]   --->   Operation 193 'call' 'call_ret23' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 5.19> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 10> <Delay = 5.84>
ST_11 : Operation 194 [1/2] (5.84ns)   --->   "%call_ret23 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @calculateForState(i1 %p_read_17, i1 %p_read13, i8 %HammingTable_aTransi_17, i8 %HammingTable_aTransi_18, i8 %HammingTable_bTransi_11, i8 %HammingTable_bTransi_12, i8 %HammingTable_cTransi_17, i8 %HammingTable_cTransi_18, i8 %HammingTable_dTransi_11, i8 %HammingTable_dTransi_12, i8 %HammingTable_eTransi_17, i8 %HammingTable_eTransi_18, i8 %HammingTable_fTransi_11, i8 %HammingTable_fTransi_12, i8 %HammingTable_gTransi_17, i8 %HammingTable_gTransi_18, i8 %HammingTable_hTransi_11, i8 %HammingTable_hTransi_12, i8 %p_read_16, i8 %p_read_15, i8 %p_read_14, i8 %p_read_13, i8 %p_read_12, i8 %p_read_11, i8 %p_read_10, i8 %p_read_9, [8 x i8]* %HammingTable_hammingDistances_finalStates, i5 4)" [viterbi_2_1_4/viterbi.cpp:279]   --->   Operation 194 'call' 'call_ret23' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 5.84> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_11 : Operation 195 [1/1] (0.00ns)   --->   "%HammingTable_aTransi_19 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret23, 0" [viterbi_2_1_4/viterbi.cpp:279]   --->   Operation 195 'extractvalue' 'HammingTable_aTransi_19' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_11 : Operation 196 [1/1] (0.00ns)   --->   "%HammingTable_aTransi_20 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret23, 1" [viterbi_2_1_4/viterbi.cpp:279]   --->   Operation 196 'extractvalue' 'HammingTable_aTransi_20' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_11 : Operation 197 [1/1] (0.00ns)   --->   "%HammingTable_bTransi_13 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret23, 2" [viterbi_2_1_4/viterbi.cpp:279]   --->   Operation 197 'extractvalue' 'HammingTable_bTransi_13' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_11 : Operation 198 [1/1] (0.00ns)   --->   "%HammingTable_bTransi_14 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret23, 3" [viterbi_2_1_4/viterbi.cpp:279]   --->   Operation 198 'extractvalue' 'HammingTable_bTransi_14' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_11 : Operation 199 [1/1] (0.00ns)   --->   "%HammingTable_cTransi_19 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret23, 4" [viterbi_2_1_4/viterbi.cpp:279]   --->   Operation 199 'extractvalue' 'HammingTable_cTransi_19' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_11 : Operation 200 [1/1] (0.00ns)   --->   "%HammingTable_cTransi_20 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret23, 5" [viterbi_2_1_4/viterbi.cpp:279]   --->   Operation 200 'extractvalue' 'HammingTable_cTransi_20' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_11 : Operation 201 [1/1] (0.00ns)   --->   "%HammingTable_dTransi_13 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret23, 6" [viterbi_2_1_4/viterbi.cpp:279]   --->   Operation 201 'extractvalue' 'HammingTable_dTransi_13' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_11 : Operation 202 [1/1] (0.00ns)   --->   "%HammingTable_dTransi_14 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret23, 7" [viterbi_2_1_4/viterbi.cpp:279]   --->   Operation 202 'extractvalue' 'HammingTable_dTransi_14' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_11 : Operation 203 [1/1] (0.00ns)   --->   "%HammingTable_eTransi_19 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret23, 8" [viterbi_2_1_4/viterbi.cpp:279]   --->   Operation 203 'extractvalue' 'HammingTable_eTransi_19' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_11 : Operation 204 [1/1] (0.00ns)   --->   "%HammingTable_eTransi_20 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret23, 9" [viterbi_2_1_4/viterbi.cpp:279]   --->   Operation 204 'extractvalue' 'HammingTable_eTransi_20' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_11 : Operation 205 [1/1] (0.00ns)   --->   "%HammingTable_fTransi_13 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret23, 10" [viterbi_2_1_4/viterbi.cpp:279]   --->   Operation 205 'extractvalue' 'HammingTable_fTransi_13' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_11 : Operation 206 [1/1] (0.00ns)   --->   "%HammingTable_fTransi_14 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret23, 11" [viterbi_2_1_4/viterbi.cpp:279]   --->   Operation 206 'extractvalue' 'HammingTable_fTransi_14' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_11 : Operation 207 [1/1] (0.00ns)   --->   "%HammingTable_gTransi_19 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret23, 12" [viterbi_2_1_4/viterbi.cpp:279]   --->   Operation 207 'extractvalue' 'HammingTable_gTransi_19' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_11 : Operation 208 [1/1] (0.00ns)   --->   "%HammingTable_gTransi_20 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret23, 13" [viterbi_2_1_4/viterbi.cpp:279]   --->   Operation 208 'extractvalue' 'HammingTable_gTransi_20' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_11 : Operation 209 [1/1] (0.00ns)   --->   "%HammingTable_hTransi_13 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret23, 14" [viterbi_2_1_4/viterbi.cpp:279]   --->   Operation 209 'extractvalue' 'HammingTable_hTransi_13' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_11 : Operation 210 [1/1] (0.00ns)   --->   "%HammingTable_hTransi_14 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret23, 15" [viterbi_2_1_4/viterbi.cpp:279]   --->   Operation 210 'extractvalue' 'HammingTable_hTransi_14' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>

State 12 <SV = 11> <Delay = 5.19>
ST_12 : Operation 211 [2/2] (5.19ns)   --->   "%call_ret24 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @calculateForState(i1 %p_read_17, i1 %p_read13, i8 %HammingTable_aTransi_19, i8 %HammingTable_aTransi_20, i8 %HammingTable_bTransi_13, i8 %HammingTable_bTransi_14, i8 %HammingTable_cTransi_19, i8 %HammingTable_cTransi_20, i8 %HammingTable_dTransi_13, i8 %HammingTable_dTransi_14, i8 %HammingTable_eTransi_19, i8 %HammingTable_eTransi_20, i8 %HammingTable_fTransi_13, i8 %HammingTable_fTransi_14, i8 %HammingTable_gTransi_19, i8 %HammingTable_gTransi_20, i8 %HammingTable_hTransi_13, i8 %HammingTable_hTransi_14, i8 %p_read_16, i8 %p_read_15, i8 %p_read_14, i8 %p_read_13, i8 %p_read_12, i8 %p_read_11, i8 %p_read_10, i8 %p_read_9, [8 x i8]* %HammingTable_hammingDistances_finalStates, i5 5)" [viterbi_2_1_4/viterbi.cpp:280]   --->   Operation 211 'call' 'call_ret24' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 5.19> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 13 <SV = 12> <Delay = 5.84>
ST_13 : Operation 212 [1/2] (5.84ns)   --->   "%call_ret24 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @calculateForState(i1 %p_read_17, i1 %p_read13, i8 %HammingTable_aTransi_19, i8 %HammingTable_aTransi_20, i8 %HammingTable_bTransi_13, i8 %HammingTable_bTransi_14, i8 %HammingTable_cTransi_19, i8 %HammingTable_cTransi_20, i8 %HammingTable_dTransi_13, i8 %HammingTable_dTransi_14, i8 %HammingTable_eTransi_19, i8 %HammingTable_eTransi_20, i8 %HammingTable_fTransi_13, i8 %HammingTable_fTransi_14, i8 %HammingTable_gTransi_19, i8 %HammingTable_gTransi_20, i8 %HammingTable_hTransi_13, i8 %HammingTable_hTransi_14, i8 %p_read_16, i8 %p_read_15, i8 %p_read_14, i8 %p_read_13, i8 %p_read_12, i8 %p_read_11, i8 %p_read_10, i8 %p_read_9, [8 x i8]* %HammingTable_hammingDistances_finalStates, i5 5)" [viterbi_2_1_4/viterbi.cpp:280]   --->   Operation 212 'call' 'call_ret24' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 5.84> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_13 : Operation 213 [1/1] (0.00ns)   --->   "%HammingTable_aTransi_21 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret24, 0" [viterbi_2_1_4/viterbi.cpp:280]   --->   Operation 213 'extractvalue' 'HammingTable_aTransi_21' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_13 : Operation 214 [1/1] (0.00ns)   --->   "%HammingTable_aTransi_22 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret24, 1" [viterbi_2_1_4/viterbi.cpp:280]   --->   Operation 214 'extractvalue' 'HammingTable_aTransi_22' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_13 : Operation 215 [1/1] (0.00ns)   --->   "%HammingTable_bTransi_15 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret24, 2" [viterbi_2_1_4/viterbi.cpp:280]   --->   Operation 215 'extractvalue' 'HammingTable_bTransi_15' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_13 : Operation 216 [1/1] (0.00ns)   --->   "%HammingTable_bTransi_16 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret24, 3" [viterbi_2_1_4/viterbi.cpp:280]   --->   Operation 216 'extractvalue' 'HammingTable_bTransi_16' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_13 : Operation 217 [1/1] (0.00ns)   --->   "%HammingTable_cTransi_21 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret24, 4" [viterbi_2_1_4/viterbi.cpp:280]   --->   Operation 217 'extractvalue' 'HammingTable_cTransi_21' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_13 : Operation 218 [1/1] (0.00ns)   --->   "%HammingTable_cTransi_22 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret24, 5" [viterbi_2_1_4/viterbi.cpp:280]   --->   Operation 218 'extractvalue' 'HammingTable_cTransi_22' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_13 : Operation 219 [1/1] (0.00ns)   --->   "%HammingTable_dTransi_15 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret24, 6" [viterbi_2_1_4/viterbi.cpp:280]   --->   Operation 219 'extractvalue' 'HammingTable_dTransi_15' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_13 : Operation 220 [1/1] (0.00ns)   --->   "%HammingTable_dTransi_16 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret24, 7" [viterbi_2_1_4/viterbi.cpp:280]   --->   Operation 220 'extractvalue' 'HammingTable_dTransi_16' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_13 : Operation 221 [1/1] (0.00ns)   --->   "%HammingTable_eTransi_21 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret24, 8" [viterbi_2_1_4/viterbi.cpp:280]   --->   Operation 221 'extractvalue' 'HammingTable_eTransi_21' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_13 : Operation 222 [1/1] (0.00ns)   --->   "%HammingTable_eTransi_22 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret24, 9" [viterbi_2_1_4/viterbi.cpp:280]   --->   Operation 222 'extractvalue' 'HammingTable_eTransi_22' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_13 : Operation 223 [1/1] (0.00ns)   --->   "%HammingTable_fTransi_15 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret24, 10" [viterbi_2_1_4/viterbi.cpp:280]   --->   Operation 223 'extractvalue' 'HammingTable_fTransi_15' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_13 : Operation 224 [1/1] (0.00ns)   --->   "%HammingTable_fTransi_16 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret24, 11" [viterbi_2_1_4/viterbi.cpp:280]   --->   Operation 224 'extractvalue' 'HammingTable_fTransi_16' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_13 : Operation 225 [1/1] (0.00ns)   --->   "%HammingTable_gTransi_21 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret24, 12" [viterbi_2_1_4/viterbi.cpp:280]   --->   Operation 225 'extractvalue' 'HammingTable_gTransi_21' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_13 : Operation 226 [1/1] (0.00ns)   --->   "%HammingTable_gTransi_22 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret24, 13" [viterbi_2_1_4/viterbi.cpp:280]   --->   Operation 226 'extractvalue' 'HammingTable_gTransi_22' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_13 : Operation 227 [1/1] (0.00ns)   --->   "%HammingTable_hTransi_15 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret24, 14" [viterbi_2_1_4/viterbi.cpp:280]   --->   Operation 227 'extractvalue' 'HammingTable_hTransi_15' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_13 : Operation 228 [1/1] (0.00ns)   --->   "%HammingTable_hTransi_16 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret24, 15" [viterbi_2_1_4/viterbi.cpp:280]   --->   Operation 228 'extractvalue' 'HammingTable_hTransi_16' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>

State 14 <SV = 13> <Delay = 5.19>
ST_14 : Operation 229 [2/2] (5.19ns)   --->   "%call_ret25 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @calculateForState(i1 %p_read_17, i1 %p_read13, i8 %HammingTable_aTransi_21, i8 %HammingTable_aTransi_22, i8 %HammingTable_bTransi_15, i8 %HammingTable_bTransi_16, i8 %HammingTable_cTransi_21, i8 %HammingTable_cTransi_22, i8 %HammingTable_dTransi_15, i8 %HammingTable_dTransi_16, i8 %HammingTable_eTransi_21, i8 %HammingTable_eTransi_22, i8 %HammingTable_fTransi_15, i8 %HammingTable_fTransi_16, i8 %HammingTable_gTransi_21, i8 %HammingTable_gTransi_22, i8 %HammingTable_hTransi_15, i8 %HammingTable_hTransi_16, i8 %p_read_16, i8 %p_read_15, i8 %p_read_14, i8 %p_read_13, i8 %p_read_12, i8 %p_read_11, i8 %p_read_10, i8 %p_read_9, [8 x i8]* %HammingTable_hammingDistances_finalStates, i5 6)" [viterbi_2_1_4/viterbi.cpp:281]   --->   Operation 229 'call' 'call_ret25' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 5.19> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 15 <SV = 14> <Delay = 5.84>
ST_15 : Operation 230 [1/2] (5.84ns)   --->   "%call_ret25 = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @calculateForState(i1 %p_read_17, i1 %p_read13, i8 %HammingTable_aTransi_21, i8 %HammingTable_aTransi_22, i8 %HammingTable_bTransi_15, i8 %HammingTable_bTransi_16, i8 %HammingTable_cTransi_21, i8 %HammingTable_cTransi_22, i8 %HammingTable_dTransi_15, i8 %HammingTable_dTransi_16, i8 %HammingTable_eTransi_21, i8 %HammingTable_eTransi_22, i8 %HammingTable_fTransi_15, i8 %HammingTable_fTransi_16, i8 %HammingTable_gTransi_21, i8 %HammingTable_gTransi_22, i8 %HammingTable_hTransi_15, i8 %HammingTable_hTransi_16, i8 %p_read_16, i8 %p_read_15, i8 %p_read_14, i8 %p_read_13, i8 %p_read_12, i8 %p_read_11, i8 %p_read_10, i8 %p_read_9, [8 x i8]* %HammingTable_hammingDistances_finalStates, i5 6)" [viterbi_2_1_4/viterbi.cpp:281]   --->   Operation 230 'call' 'call_ret25' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 5.84> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_15 : Operation 231 [1/1] (0.00ns)   --->   "%HammingTable_aTransi_23 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret25, 0" [viterbi_2_1_4/viterbi.cpp:281]   --->   Operation 231 'extractvalue' 'HammingTable_aTransi_23' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_15 : Operation 232 [1/1] (0.00ns)   --->   "%HammingTable_aTransi_24 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret25, 1" [viterbi_2_1_4/viterbi.cpp:281]   --->   Operation 232 'extractvalue' 'HammingTable_aTransi_24' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_15 : Operation 233 [1/1] (0.00ns)   --->   "%HammingTable_bTransi_17 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret25, 2" [viterbi_2_1_4/viterbi.cpp:281]   --->   Operation 233 'extractvalue' 'HammingTable_bTransi_17' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_15 : Operation 234 [1/1] (0.00ns)   --->   "%HammingTable_bTransi_18 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret25, 3" [viterbi_2_1_4/viterbi.cpp:281]   --->   Operation 234 'extractvalue' 'HammingTable_bTransi_18' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_15 : Operation 235 [1/1] (0.00ns)   --->   "%HammingTable_cTransi_23 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret25, 4" [viterbi_2_1_4/viterbi.cpp:281]   --->   Operation 235 'extractvalue' 'HammingTable_cTransi_23' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_15 : Operation 236 [1/1] (0.00ns)   --->   "%HammingTable_cTransi_24 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret25, 5" [viterbi_2_1_4/viterbi.cpp:281]   --->   Operation 236 'extractvalue' 'HammingTable_cTransi_24' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_15 : Operation 237 [1/1] (0.00ns)   --->   "%HammingTable_dTransi_17 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret25, 6" [viterbi_2_1_4/viterbi.cpp:281]   --->   Operation 237 'extractvalue' 'HammingTable_dTransi_17' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_15 : Operation 238 [1/1] (0.00ns)   --->   "%HammingTable_dTransi_18 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret25, 7" [viterbi_2_1_4/viterbi.cpp:281]   --->   Operation 238 'extractvalue' 'HammingTable_dTransi_18' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_15 : Operation 239 [1/1] (0.00ns)   --->   "%HammingTable_eTransi_23 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret25, 8" [viterbi_2_1_4/viterbi.cpp:281]   --->   Operation 239 'extractvalue' 'HammingTable_eTransi_23' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_15 : Operation 240 [1/1] (0.00ns)   --->   "%HammingTable_eTransi_24 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret25, 9" [viterbi_2_1_4/viterbi.cpp:281]   --->   Operation 240 'extractvalue' 'HammingTable_eTransi_24' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_15 : Operation 241 [1/1] (0.00ns)   --->   "%HammingTable_fTransi_17 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret25, 10" [viterbi_2_1_4/viterbi.cpp:281]   --->   Operation 241 'extractvalue' 'HammingTable_fTransi_17' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_15 : Operation 242 [1/1] (0.00ns)   --->   "%HammingTable_fTransi_18 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret25, 11" [viterbi_2_1_4/viterbi.cpp:281]   --->   Operation 242 'extractvalue' 'HammingTable_fTransi_18' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_15 : Operation 243 [1/1] (0.00ns)   --->   "%HammingTable_gTransi_23 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret25, 12" [viterbi_2_1_4/viterbi.cpp:281]   --->   Operation 243 'extractvalue' 'HammingTable_gTransi_23' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_15 : Operation 244 [1/1] (0.00ns)   --->   "%HammingTable_gTransi_24 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret25, 13" [viterbi_2_1_4/viterbi.cpp:281]   --->   Operation 244 'extractvalue' 'HammingTable_gTransi_24' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_15 : Operation 245 [1/1] (0.00ns)   --->   "%HammingTable_hTransi_17 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret25, 14" [viterbi_2_1_4/viterbi.cpp:281]   --->   Operation 245 'extractvalue' 'HammingTable_hTransi_17' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_15 : Operation 246 [1/1] (0.00ns)   --->   "%HammingTable_hTransi_18 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret25, 15" [viterbi_2_1_4/viterbi.cpp:281]   --->   Operation 246 'extractvalue' 'HammingTable_hTransi_18' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>

State 16 <SV = 15> <Delay = 5.19>
ST_16 : Operation 247 [2/2] (5.19ns)   --->   "%call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @calculateForState(i1 %p_read_17, i1 %p_read13, i8 %HammingTable_aTransi_23, i8 %HammingTable_aTransi_24, i8 %HammingTable_bTransi_17, i8 %HammingTable_bTransi_18, i8 %HammingTable_cTransi_23, i8 %HammingTable_cTransi_24, i8 %HammingTable_dTransi_17, i8 %HammingTable_dTransi_18, i8 %HammingTable_eTransi_23, i8 %HammingTable_eTransi_24, i8 %HammingTable_fTransi_17, i8 %HammingTable_fTransi_18, i8 %HammingTable_gTransi_23, i8 %HammingTable_gTransi_24, i8 %HammingTable_hTransi_17, i8 %HammingTable_hTransi_18, i8 %p_read_16, i8 %p_read_15, i8 %p_read_14, i8 %p_read_13, i8 %p_read_12, i8 %p_read_11, i8 %p_read_10, i8 %p_read_9, [8 x i8]* %HammingTable_hammingDistances_finalStates, i5 7)" [viterbi_2_1_4/viterbi.cpp:282]   --->   Operation 247 'call' 'call_ret' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 5.19> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_16 : Operation 248 [1/1] (1.53ns)   --->   "br label %7" [viterbi_2_1_4/viterbi.cpp:272]   --->   Operation 248 'br' <Predicate = (!icmp_ln257 & !icmp_ln261 & icmp_ln266)> <Delay = 1.53>
ST_16 : Operation 249 [1/1] (1.53ns)   --->   "br label %7" [viterbi_2_1_4/viterbi.cpp:265]   --->   Operation 249 'br' <Predicate = (!icmp_ln257 & icmp_ln261)> <Delay = 1.53>
ST_16 : Operation 250 [1/1] (1.53ns)   --->   "br label %7" [viterbi_2_1_4/viterbi.cpp:260]   --->   Operation 250 'br' <Predicate = (icmp_ln257)> <Delay = 1.53>

State 17 <SV = 16> <Delay = 7.37>
ST_17 : Operation 251 [1/2] (5.84ns)   --->   "%call_ret = call fastcc { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } @calculateForState(i1 %p_read_17, i1 %p_read13, i8 %HammingTable_aTransi_23, i8 %HammingTable_aTransi_24, i8 %HammingTable_bTransi_17, i8 %HammingTable_bTransi_18, i8 %HammingTable_cTransi_23, i8 %HammingTable_cTransi_24, i8 %HammingTable_dTransi_17, i8 %HammingTable_dTransi_18, i8 %HammingTable_eTransi_23, i8 %HammingTable_eTransi_24, i8 %HammingTable_fTransi_17, i8 %HammingTable_fTransi_18, i8 %HammingTable_gTransi_23, i8 %HammingTable_gTransi_24, i8 %HammingTable_hTransi_17, i8 %HammingTable_hTransi_18, i8 %p_read_16, i8 %p_read_15, i8 %p_read_14, i8 %p_read_13, i8 %p_read_12, i8 %p_read_11, i8 %p_read_10, i8 %p_read_9, [8 x i8]* %HammingTable_hammingDistances_finalStates, i5 7)" [viterbi_2_1_4/viterbi.cpp:282]   --->   Operation 251 'call' 'call_ret' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 5.84> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_17 : Operation 252 [1/1] (0.00ns)   --->   "%HammingTable_aTransi_25 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 0" [viterbi_2_1_4/viterbi.cpp:282]   --->   Operation 252 'extractvalue' 'HammingTable_aTransi_25' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_17 : Operation 253 [1/1] (0.00ns)   --->   "%HammingTable_aTransi_26 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 1" [viterbi_2_1_4/viterbi.cpp:282]   --->   Operation 253 'extractvalue' 'HammingTable_aTransi_26' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_17 : Operation 254 [1/1] (0.00ns)   --->   "%HammingTable_cTransi_25 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 4" [viterbi_2_1_4/viterbi.cpp:282]   --->   Operation 254 'extractvalue' 'HammingTable_cTransi_25' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_17 : Operation 255 [1/1] (0.00ns)   --->   "%HammingTable_cTransi_26 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 5" [viterbi_2_1_4/viterbi.cpp:282]   --->   Operation 255 'extractvalue' 'HammingTable_cTransi_26' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_17 : Operation 256 [1/1] (0.00ns)   --->   "%HammingTable_eTransi_25 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 8" [viterbi_2_1_4/viterbi.cpp:282]   --->   Operation 256 'extractvalue' 'HammingTable_eTransi_25' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_17 : Operation 257 [1/1] (0.00ns)   --->   "%HammingTable_eTransi_26 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 9" [viterbi_2_1_4/viterbi.cpp:282]   --->   Operation 257 'extractvalue' 'HammingTable_eTransi_26' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_17 : Operation 258 [1/1] (0.00ns)   --->   "%HammingTable_gTransi_25 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 12" [viterbi_2_1_4/viterbi.cpp:282]   --->   Operation 258 'extractvalue' 'HammingTable_gTransi_25' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_17 : Operation 259 [1/1] (0.00ns)   --->   "%HammingTable_gTransi_26 = extractvalue { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 } %call_ret, 13" [viterbi_2_1_4/viterbi.cpp:282]   --->   Operation 259 'extractvalue' 'HammingTable_gTransi_26' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 0.00>
ST_17 : Operation 260 [1/1] (1.53ns)   --->   "br label %7"   --->   Operation 260 'br' <Predicate = (!icmp_ln257 & !icmp_ln261 & !icmp_ln266)> <Delay = 1.53>
ST_17 : Operation 261 [1/1] (0.00ns)   --->   "%HammingTable_aTransi_28 = phi i8 [ %HammingTable_aTransi, %1 ], [ %HammingTable_aTransi_4, %3 ], [ %HammingTable_aTransi_11, %5 ], [ %HammingTable_aTransi_25, %6 ]" [viterbi_2_1_4/viterbi.cpp:259]   --->   Operation 261 'phi' 'HammingTable_aTransi_28' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 262 [1/1] (0.00ns)   --->   "%HammingTable_aTransi_29 = phi i8 [ %HammingTable_aTransi_1, %1 ], [ %HammingTable_aTransi_5, %3 ], [ %HammingTable_aTransi_12, %5 ], [ %HammingTable_aTransi_26, %6 ]" [viterbi_2_1_4/viterbi.cpp:259]   --->   Operation 262 'phi' 'HammingTable_aTransi_29' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 263 [1/1] (0.00ns)   --->   "%HammingTable_cTransi_28 = phi i8 [ %HammingTable_cTransi, %1 ], [ %HammingTable_cTransi_4, %3 ], [ %HammingTable_cTransi_11, %5 ], [ %HammingTable_cTransi_25, %6 ]" [viterbi_2_1_4/viterbi.cpp:259]   --->   Operation 263 'phi' 'HammingTable_cTransi_28' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 264 [1/1] (0.00ns)   --->   "%HammingTable_cTransi_29 = phi i8 [ %HammingTable_cTransi_1, %1 ], [ %HammingTable_cTransi_5, %3 ], [ %HammingTable_cTransi_12, %5 ], [ %HammingTable_cTransi_26, %6 ]" [viterbi_2_1_4/viterbi.cpp:259]   --->   Operation 264 'phi' 'HammingTable_cTransi_29' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 265 [1/1] (0.00ns)   --->   "%HammingTable_eTransi_28 = phi i8 [ %HammingTable_eTransi, %1 ], [ %HammingTable_eTransi_4, %3 ], [ %HammingTable_eTransi_11, %5 ], [ %HammingTable_eTransi_25, %6 ]" [viterbi_2_1_4/viterbi.cpp:259]   --->   Operation 265 'phi' 'HammingTable_eTransi_28' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 266 [1/1] (0.00ns)   --->   "%HammingTable_eTransi_29 = phi i8 [ %HammingTable_eTransi_1, %1 ], [ %HammingTable_eTransi_5, %3 ], [ %HammingTable_eTransi_12, %5 ], [ %HammingTable_eTransi_26, %6 ]" [viterbi_2_1_4/viterbi.cpp:259]   --->   Operation 266 'phi' 'HammingTable_eTransi_29' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 267 [1/1] (0.00ns)   --->   "%HammingTable_gTransi_28 = phi i8 [ %HammingTable_gTransi, %1 ], [ %HammingTable_gTransi_4, %3 ], [ %HammingTable_gTransi_11, %5 ], [ %HammingTable_gTransi_25, %6 ]" [viterbi_2_1_4/viterbi.cpp:259]   --->   Operation 267 'phi' 'HammingTable_gTransi_28' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 268 [1/1] (0.00ns)   --->   "%HammingTable_gTransi_29 = phi i8 [ %HammingTable_gTransi_1, %1 ], [ %HammingTable_gTransi_5, %3 ], [ %HammingTable_gTransi_12, %5 ], [ %HammingTable_gTransi_26, %6 ]" [viterbi_2_1_4/viterbi.cpp:259]   --->   Operation 268 'phi' 'HammingTable_gTransi_29' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 269 [1/1] (0.00ns)   --->   "%newret = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8 } undef, i8 %HammingTable_aTransi_28, 0" [viterbi_2_1_4/viterbi.cpp:259]   --->   Operation 269 'insertvalue' 'newret' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 270 [1/1] (0.00ns)   --->   "%newret2 = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8 } %newret, i8 %HammingTable_aTransi_29, 1" [viterbi_2_1_4/viterbi.cpp:259]   --->   Operation 270 'insertvalue' 'newret2' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 271 [1/1] (0.00ns)   --->   "%newret4 = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8 } %newret2, i8 %HammingTable_cTransi_28, 2" [viterbi_2_1_4/viterbi.cpp:259]   --->   Operation 271 'insertvalue' 'newret4' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 272 [1/1] (0.00ns)   --->   "%newret6 = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8 } %newret4, i8 %HammingTable_cTransi_29, 3" [viterbi_2_1_4/viterbi.cpp:259]   --->   Operation 272 'insertvalue' 'newret6' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 273 [1/1] (0.00ns)   --->   "%newret8 = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8 } %newret6, i8 %HammingTable_eTransi_28, 4" [viterbi_2_1_4/viterbi.cpp:259]   --->   Operation 273 'insertvalue' 'newret8' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 274 [1/1] (0.00ns)   --->   "%newret1 = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8 } %newret8, i8 %HammingTable_eTransi_29, 5" [viterbi_2_1_4/viterbi.cpp:259]   --->   Operation 274 'insertvalue' 'newret1' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 275 [1/1] (0.00ns)   --->   "%newret3 = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8 } %newret1, i8 %HammingTable_gTransi_28, 6" [viterbi_2_1_4/viterbi.cpp:259]   --->   Operation 275 'insertvalue' 'newret3' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 276 [1/1] (0.00ns)   --->   "%newret5 = insertvalue { i8, i8, i8, i8, i8, i8, i8, i8 } %newret3, i8 %HammingTable_gTransi_29, 7" [viterbi_2_1_4/viterbi.cpp:259]   --->   Operation 276 'insertvalue' 'newret5' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 277 [1/1] (0.00ns)   --->   "ret { i8, i8, i8, i8, i8, i8, i8, i8 } %newret5" [viterbi_2_1_4/viterbi.cpp:259]   --->   Operation 277 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.987ns
The critical path consists of the following:
	wire read on port 'HammingTable_step_read' (viterbi_2_1_4/viterbi.cpp:247) [14]  (0 ns)
	'icmp' operation ('icmp_ln261', viterbi_2_1_4/viterbi.cpp:261) [29]  (0.987 ns)

 <State 2>: 5.2ns
The critical path consists of the following:
	'call' operation ('call_ret16', viterbi_2_1_4/viterbi.cpp:268) to 'calculateForState' [33]  (5.2 ns)

 <State 3>: 5.84ns
The critical path consists of the following:
	'call' operation ('call_ret16', viterbi_2_1_4/viterbi.cpp:268) to 'calculateForState' [33]  (5.84 ns)

 <State 4>: 5.2ns
The critical path consists of the following:
	'call' operation ('call_ret20', viterbi_2_1_4/viterbi.cpp:276) to 'calculateForState' [52]  (5.2 ns)

 <State 5>: 5.84ns
The critical path consists of the following:
	'call' operation ('call_ret20', viterbi_2_1_4/viterbi.cpp:276) to 'calculateForState' [52]  (5.84 ns)

 <State 6>: 5.2ns
The critical path consists of the following:
	'call' operation ('call_ret21', viterbi_2_1_4/viterbi.cpp:277) to 'calculateForState' [69]  (5.2 ns)

 <State 7>: 5.84ns
The critical path consists of the following:
	'call' operation ('call_ret21', viterbi_2_1_4/viterbi.cpp:277) to 'calculateForState' [69]  (5.84 ns)

 <State 8>: 5.2ns
The critical path consists of the following:
	'call' operation ('call_ret22', viterbi_2_1_4/viterbi.cpp:278) to 'calculateForState' [86]  (5.2 ns)

 <State 9>: 5.84ns
The critical path consists of the following:
	'call' operation ('call_ret22', viterbi_2_1_4/viterbi.cpp:278) to 'calculateForState' [86]  (5.84 ns)

 <State 10>: 5.2ns
The critical path consists of the following:
	'call' operation ('call_ret23', viterbi_2_1_4/viterbi.cpp:279) to 'calculateForState' [103]  (5.2 ns)

 <State 11>: 5.84ns
The critical path consists of the following:
	'call' operation ('call_ret23', viterbi_2_1_4/viterbi.cpp:279) to 'calculateForState' [103]  (5.84 ns)

 <State 12>: 5.2ns
The critical path consists of the following:
	'call' operation ('call_ret24', viterbi_2_1_4/viterbi.cpp:280) to 'calculateForState' [120]  (5.2 ns)

 <State 13>: 5.84ns
The critical path consists of the following:
	'call' operation ('call_ret24', viterbi_2_1_4/viterbi.cpp:280) to 'calculateForState' [120]  (5.84 ns)

 <State 14>: 5.2ns
The critical path consists of the following:
	'call' operation ('call_ret25', viterbi_2_1_4/viterbi.cpp:281) to 'calculateForState' [137]  (5.2 ns)

 <State 15>: 5.84ns
The critical path consists of the following:
	'call' operation ('call_ret25', viterbi_2_1_4/viterbi.cpp:281) to 'calculateForState' [137]  (5.84 ns)

 <State 16>: 5.2ns
The critical path consists of the following:
	'call' operation ('call_ret', viterbi_2_1_4/viterbi.cpp:282) to 'calculateForState' [154]  (5.2 ns)

 <State 17>: 7.38ns
The critical path consists of the following:
	'call' operation ('call_ret', viterbi_2_1_4/viterbi.cpp:282) to 'calculateForState' [154]  (5.84 ns)
	multiplexor before 'phi' operation ('HammingTable_aTransi_28', viterbi_2_1_4/viterbi.cpp:259) with incoming values : ('HammingTable_aTransi_25', viterbi_2_1_4/viterbi.cpp:282) ('HammingTable_aTransi_11', viterbi_2_1_4/viterbi.cpp:271) ('HammingTable_aTransi_4', viterbi_2_1_4/viterbi.cpp:264) ('HammingTable_aTransi', viterbi_2_1_4/viterbi.cpp:259) [249]  (1.54 ns)
	'phi' operation ('HammingTable_aTransi_28', viterbi_2_1_4/viterbi.cpp:259) with incoming values : ('HammingTable_aTransi_25', viterbi_2_1_4/viterbi.cpp:282) ('HammingTable_aTransi_11', viterbi_2_1_4/viterbi.cpp:271) ('HammingTable_aTransi_4', viterbi_2_1_4/viterbi.cpp:264) ('HammingTable_aTransi', viterbi_2_1_4/viterbi.cpp:259) [249]  (0 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
