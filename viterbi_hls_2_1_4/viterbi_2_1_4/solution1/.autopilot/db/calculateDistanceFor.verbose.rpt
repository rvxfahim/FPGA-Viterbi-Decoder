

================================================================
== Vivado HLS Report for 'calculateDistanceFor'
================================================================
* Date:           Thu Jul 28 06:40:28 2022

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        viterbi_2_1_4
* Solution:       solution1
* Product family: spartan7
* Target device:  xc7s100-fgga676-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     3.427|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    0|    0|    1|    1| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+-----+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  | URAM|
+-----------------+---------+-------+--------+-------+-----+
|DSP              |        -|      -|       -|      -|    -|
|Expression       |        -|      -|       0|     33|    -|
|FIFO             |        -|      -|       -|      -|    -|
|Instance         |        -|      -|       -|      -|    -|
|Memory           |        -|      -|       -|      -|    -|
|Multiplexer      |        -|      -|       -|      -|    -|
|Register         |        -|      -|       -|      -|    -|
+-----------------+---------+-------+--------+-------+-----+
|Total            |        0|      0|       0|     33|    0|
+-----------------+---------+-------+--------+-------+-----+
|Available        |      240|    160|  128000|  64000|    0|
+-----------------+---------+-------+--------+-------+-----+
|Utilization (%)  |        0|      0|       0|   ~0  |    0|
+-----------------+---------+-------+--------+-------+-----+

+ Detail: 
    * Instance: 
    N/A

    * DSP48E: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    +-----------------------+----------+-------+---+----+------------+------------+
    |     Variable Name     | Operation| DSP48E| FF| LUT| Bitwidth P0| Bitwidth P1|
    +-----------------------+----------+-------+---+----+------------+------------+
    |add_ln233_fu_74_p2     |     +    |      0|  0|  15|           8|           8|
    |and_ln233_fu_60_p2     |    and   |      0|  0|   2|           1|           1|
    |or_ln233_fu_80_p2      |    or    |      0|  0|   2|           1|           1|
    |ap_return              |  select  |      0|  0|   8|           1|           8|
    |select_ln233_fu_66_p3  |  select  |      0|  0|   2|           1|           2|
    |xor_ln233_1_fu_54_p2   |    xor   |      0|  0|   2|           1|           1|
    |xor_ln233_fu_48_p2     |    xor   |      0|  0|   2|           1|           1|
    +-----------------------+----------+-------+---+----+------------+------------+
    |Total                  |          |      0|  0|  33|          14|          22|
    +-----------------------+----------+-------+---+----+------------+------------+

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
+------------------+-----+-----+------------+----------------------+--------------+
|     RTL Ports    | Dir | Bits|  Protocol  |     Source Object    |    C Type    |
+------------------+-----+-----+------------+----------------------+--------------+
|ap_ready          | out |    1| ap_ctrl_hs | calculateDistanceFor | return value |
|ap_return         | out |    8| ap_ctrl_hs | calculateDistanceFor | return value |
|p_read            |  in |    1|   ap_none  |        p_read        |    scalar    |
|p_read1           |  in |    1|   ap_none  |        p_read1       |    scalar    |
|firstBit          |  in |    1|   ap_none  |       firstBit       |    scalar    |
|secondBit         |  in |    1|   ap_none  |       secondBit      |    scalar    |
|previousDistance  |  in |    8|   ap_none  |   previousDistance   |    scalar    |
+------------------+-----+-----+------------+----------------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 1
IsDatapathOnly: 2
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 1 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.42>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "%previousDistance_rea = call i8 @_ssdm_op_Read.ap_auto.i8(i8 %previousDistance)" [viterbi_2_1_4/viterbi.cpp:230]   --->   Operation 2 'read' 'previousDistance_rea' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%secondBit_read = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %secondBit)" [viterbi_2_1_4/viterbi.cpp:230]   --->   Operation 3 'read' 'secondBit_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%firstBit_read = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %firstBit)" [viterbi_2_1_4/viterbi.cpp:230]   --->   Operation 4 'read' 'firstBit_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%p_read13 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %p_read1)" [viterbi_2_1_4/viterbi.cpp:230]   --->   Operation 5 'read' 'p_read13' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%p_read_33 = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %p_read)" [viterbi_2_1_4/viterbi.cpp:230]   --->   Operation 6 'read' 'p_read_33' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.80ns)   --->   "%xor_ln233 = xor i1 %p_read_33, %firstBit_read" [viterbi_2_1_4/viterbi.cpp:233]   --->   Operation 7 'xor' 'xor_ln233' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 8 [1/1] (0.80ns)   --->   "%xor_ln233_1 = xor i1 %p_read13, %secondBit_read" [viterbi_2_1_4/viterbi.cpp:233]   --->   Operation 8 'xor' 'xor_ln233_1' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 9 [1/1] (0.00ns) (grouped into LUT with out node add_ln233)   --->   "%and_ln233 = and i1 %xor_ln233, %xor_ln233_1" [viterbi_2_1_4/viterbi.cpp:233]   --->   Operation 9 'and' 'and_ln233' <Predicate = (or_ln233)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 10 [1/1] (0.00ns) (grouped into LUT with out node add_ln233)   --->   "%select_ln233 = select i1 %and_ln233, i8 2, i8 1" [viterbi_2_1_4/viterbi.cpp:233]   --->   Operation 10 'select' 'select_ln233' <Predicate = (or_ln233)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.81> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 11 [1/1] (1.63ns) (out node of the LUT)   --->   "%add_ln233 = add i8 %previousDistance_rea, %select_ln233" [viterbi_2_1_4/viterbi.cpp:233]   --->   Operation 11 'add' 'add_ln233' <Predicate = (or_ln233)> <Delay = 1.63> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.63> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 12 [1/1] (0.00ns) (grouped into LUT with out node select_ln233_1)   --->   "%or_ln233 = or i1 %xor_ln233_1, %xor_ln233" [viterbi_2_1_4/viterbi.cpp:233]   --->   Operation 12 'or' 'or_ln233' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 13 [1/1] (0.99ns) (out node of the LUT)   --->   "%select_ln233_1 = select i1 %or_ln233, i8 %add_ln233, i8 %previousDistance_rea" [viterbi_2_1_4/viterbi.cpp:233]   --->   Operation 13 'select' 'select_ln233_1' <Predicate = true> <Delay = 0.99> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.81> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "ret i8 %select_ln233_1" [viterbi_2_1_4/viterbi.cpp:245]   --->   Operation 14 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 1
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 1
- Is top level: 0
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ p_read]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ p_read1]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ firstBit]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ secondBit]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ previousDistance]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
previousDistance_rea (read  ) [ 00]
secondBit_read       (read  ) [ 00]
firstBit_read        (read  ) [ 00]
p_read13             (read  ) [ 00]
p_read_33            (read  ) [ 00]
xor_ln233            (xor   ) [ 00]
xor_ln233_1          (xor   ) [ 00]
and_ln233            (and   ) [ 00]
select_ln233         (select) [ 00]
add_ln233            (add   ) [ 00]
or_ln233             (or    ) [ 01]
select_ln233_1       (select) [ 00]
ret_ln245            (ret   ) [ 00]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="p_read">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_read"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="p_read1">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_read1"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="firstBit">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="firstBit"/></StgValue>
</bind>
</comp>

<comp id="6" class="1000" name="secondBit">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="secondBit"/></StgValue>
</bind>
</comp>

<comp id="8" class="1000" name="previousDistance">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="previousDistance"/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i8"/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i1"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="18" class="1004" name="previousDistance_rea_read_fu_18">
<pin_list>
<pin id="19" dir="0" index="0" bw="8" slack="0"/>
<pin id="20" dir="0" index="1" bw="8" slack="0"/>
<pin id="21" dir="1" index="2" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="previousDistance_rea/1 "/>
</bind>
</comp>

<comp id="24" class="1004" name="secondBit_read_read_fu_24">
<pin_list>
<pin id="25" dir="0" index="0" bw="1" slack="0"/>
<pin id="26" dir="0" index="1" bw="1" slack="0"/>
<pin id="27" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="secondBit_read/1 "/>
</bind>
</comp>

<comp id="30" class="1004" name="firstBit_read_read_fu_30">
<pin_list>
<pin id="31" dir="0" index="0" bw="1" slack="0"/>
<pin id="32" dir="0" index="1" bw="1" slack="0"/>
<pin id="33" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="firstBit_read/1 "/>
</bind>
</comp>

<comp id="36" class="1004" name="p_read13_read_fu_36">
<pin_list>
<pin id="37" dir="0" index="0" bw="1" slack="0"/>
<pin id="38" dir="0" index="1" bw="1" slack="0"/>
<pin id="39" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="p_read13/1 "/>
</bind>
</comp>

<comp id="42" class="1004" name="p_read_33_read_fu_42">
<pin_list>
<pin id="43" dir="0" index="0" bw="1" slack="0"/>
<pin id="44" dir="0" index="1" bw="1" slack="0"/>
<pin id="45" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="p_read_33/1 "/>
</bind>
</comp>

<comp id="48" class="1004" name="xor_ln233_fu_48">
<pin_list>
<pin id="49" dir="0" index="0" bw="1" slack="0"/>
<pin id="50" dir="0" index="1" bw="1" slack="0"/>
<pin id="51" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln233/1 "/>
</bind>
</comp>

<comp id="54" class="1004" name="xor_ln233_1_fu_54">
<pin_list>
<pin id="55" dir="0" index="0" bw="1" slack="0"/>
<pin id="56" dir="0" index="1" bw="1" slack="0"/>
<pin id="57" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="xor(25) " fcode="xor"/>
<opset="xor_ln233_1/1 "/>
</bind>
</comp>

<comp id="60" class="1004" name="and_ln233_fu_60">
<pin_list>
<pin id="61" dir="0" index="0" bw="1" slack="0"/>
<pin id="62" dir="0" index="1" bw="1" slack="0"/>
<pin id="63" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="and(23) " fcode="and"/>
<opset="and_ln233/1 "/>
</bind>
</comp>

<comp id="66" class="1004" name="select_ln233_fu_66">
<pin_list>
<pin id="67" dir="0" index="0" bw="1" slack="0"/>
<pin id="68" dir="0" index="1" bw="8" slack="0"/>
<pin id="69" dir="0" index="2" bw="8" slack="0"/>
<pin id="70" dir="1" index="3" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln233/1 "/>
</bind>
</comp>

<comp id="74" class="1004" name="add_ln233_fu_74">
<pin_list>
<pin id="75" dir="0" index="0" bw="8" slack="0"/>
<pin id="76" dir="0" index="1" bw="3" slack="0"/>
<pin id="77" dir="1" index="2" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="add_ln233/1 "/>
</bind>
</comp>

<comp id="80" class="1004" name="or_ln233_fu_80">
<pin_list>
<pin id="81" dir="0" index="0" bw="1" slack="0"/>
<pin id="82" dir="0" index="1" bw="1" slack="0"/>
<pin id="83" dir="1" index="2" bw="1" slack="0"/>
</pin_list>
<bind>
<opcode="or(24) " fcode="or"/>
<opset="or_ln233/1 "/>
</bind>
</comp>

<comp id="86" class="1004" name="select_ln233_1_fu_86">
<pin_list>
<pin id="87" dir="0" index="0" bw="1" slack="0"/>
<pin id="88" dir="0" index="1" bw="8" slack="0"/>
<pin id="89" dir="0" index="2" bw="8" slack="0"/>
<pin id="90" dir="1" index="3" bw="8" slack="2147483647"/>
</pin_list>
<bind>
<opcode="select(49) " fcode="select"/>
<opset="select_ln233_1/1 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="22"><net_src comp="10" pin="0"/><net_sink comp="18" pin=0"/></net>

<net id="23"><net_src comp="8" pin="0"/><net_sink comp="18" pin=1"/></net>

<net id="28"><net_src comp="12" pin="0"/><net_sink comp="24" pin=0"/></net>

<net id="29"><net_src comp="6" pin="0"/><net_sink comp="24" pin=1"/></net>

<net id="34"><net_src comp="12" pin="0"/><net_sink comp="30" pin=0"/></net>

<net id="35"><net_src comp="4" pin="0"/><net_sink comp="30" pin=1"/></net>

<net id="40"><net_src comp="12" pin="0"/><net_sink comp="36" pin=0"/></net>

<net id="41"><net_src comp="2" pin="0"/><net_sink comp="36" pin=1"/></net>

<net id="46"><net_src comp="12" pin="0"/><net_sink comp="42" pin=0"/></net>

<net id="47"><net_src comp="0" pin="0"/><net_sink comp="42" pin=1"/></net>

<net id="52"><net_src comp="42" pin="2"/><net_sink comp="48" pin=0"/></net>

<net id="53"><net_src comp="30" pin="2"/><net_sink comp="48" pin=1"/></net>

<net id="58"><net_src comp="36" pin="2"/><net_sink comp="54" pin=0"/></net>

<net id="59"><net_src comp="24" pin="2"/><net_sink comp="54" pin=1"/></net>

<net id="64"><net_src comp="48" pin="2"/><net_sink comp="60" pin=0"/></net>

<net id="65"><net_src comp="54" pin="2"/><net_sink comp="60" pin=1"/></net>

<net id="71"><net_src comp="60" pin="2"/><net_sink comp="66" pin=0"/></net>

<net id="72"><net_src comp="14" pin="0"/><net_sink comp="66" pin=1"/></net>

<net id="73"><net_src comp="16" pin="0"/><net_sink comp="66" pin=2"/></net>

<net id="78"><net_src comp="18" pin="2"/><net_sink comp="74" pin=0"/></net>

<net id="79"><net_src comp="66" pin="3"/><net_sink comp="74" pin=1"/></net>

<net id="84"><net_src comp="54" pin="2"/><net_sink comp="80" pin=0"/></net>

<net id="85"><net_src comp="48" pin="2"/><net_sink comp="80" pin=1"/></net>

<net id="91"><net_src comp="80" pin="2"/><net_sink comp="86" pin=0"/></net>

<net id="92"><net_src comp="74" pin="2"/><net_sink comp="86" pin=1"/></net>

<net id="93"><net_src comp="18" pin="2"/><net_sink comp="86" pin=2"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
 - Input state : 
	Port: calculateDistanceFor : p_read | {1 }
	Port: calculateDistanceFor : p_read1 | {1 }
	Port: calculateDistanceFor : firstBit | {1 }
	Port: calculateDistanceFor : secondBit | {1 }
	Port: calculateDistanceFor : previousDistance | {1 }
  - Chain level:
	State 1
		add_ln233 : 1
		select_ln233_1 : 2
		ret_ln245 : 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|---------------------------------|---------|---------|
| Operation|         Functional Unit         |    FF   |   LUT   |
|----------|---------------------------------|---------|---------|
|  select  |        select_ln233_fu_66       |    0    |    8    |
|          |       select_ln233_1_fu_86      |    0    |    8    |
|----------|---------------------------------|---------|---------|
|    add   |         add_ln233_fu_74         |    0    |    15   |
|----------|---------------------------------|---------|---------|
|    xor   |         xor_ln233_fu_48         |    0    |    2    |
|          |        xor_ln233_1_fu_54        |    0    |    2    |
|----------|---------------------------------|---------|---------|
|    and   |         and_ln233_fu_60         |    0    |    2    |
|----------|---------------------------------|---------|---------|
|    or    |          or_ln233_fu_80         |    0    |    2    |
|----------|---------------------------------|---------|---------|
|          | previousDistance_rea_read_fu_18 |    0    |    0    |
|          |    secondBit_read_read_fu_24    |    0    |    0    |
|   read   |     firstBit_read_read_fu_30    |    0    |    0    |
|          |       p_read13_read_fu_36       |    0    |    0    |
|          |       p_read_33_read_fu_42      |    0    |    0    |
|----------|---------------------------------|---------|---------|
|   Total  |                                 |    0    |    39   |
|----------|---------------------------------|---------|---------|

Memories:
N/A

* Register list:
N/A

* Multiplexer (MUX) list: 
|--------|------|------|------|--------|
|  Comp  |  Pin | Size |  BW  | S x BW |
|--------|------|------|------|--------|
|  Total |      |      |      |    0   |
|--------|------|------|------|--------|



* Summary:
+-----------+--------+--------+
|           |   FF   |   LUT  |
+-----------+--------+--------+
|  Function |    0   |   39   |
|   Memory  |    -   |    -   |
|Multiplexer|    -   |    -   |
|  Register |    -   |    -   |
+-----------+--------+--------+
|   Total   |    0   |   39   |
+-----------+--------+--------+
