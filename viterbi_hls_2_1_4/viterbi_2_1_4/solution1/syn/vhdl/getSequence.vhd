-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity getSequence is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    stateA : IN STD_LOGIC_VECTOR (3 downto 0);
    stateB : IN STD_LOGIC_VECTOR (3 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of getSequence is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal bitSequence_decoded : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal icmp_ln429_fu_80_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln434_fu_98_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln439_fu_116_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln444_fu_128_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln449_fu_146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln454_fu_158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln459_fu_176_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln464_fu_188_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln469_fu_206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln474_fu_212_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln479_fu_224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln484_fu_230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln489_fu_242_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln494_fu_248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln499_fu_260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln504_fu_266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal trunc_ln429_fu_66_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln429_1_fu_70_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln429_fu_74_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln434_fu_86_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln434_1_fu_92_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln439_fu_104_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln439_1_fu_110_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln444_fu_122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln449_fu_134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln449_1_fu_140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln454_fu_152_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln459_fu_164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln459_1_fu_170_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln464_fu_182_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln469_fu_194_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln469_1_fu_200_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln479_fu_218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln489_fu_236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln499_fu_254_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_reset_start_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    bitSequence_decoded_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = and_ln464_fu_188_p2) and (ap_const_lv1_0 = and_ln459_fu_176_p2) and (ap_const_lv1_0 = and_ln454_fu_158_p2) and (ap_const_lv1_0 = and_ln449_fu_146_p2) and (ap_const_lv1_0 = and_ln444_fu_128_p2) and (ap_const_lv1_0 = and_ln439_fu_116_p2) and (ap_const_lv1_0 = and_ln434_fu_98_p2) and (icmp_ln429_fu_80_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_lv1_1 = and_ln459_fu_176_p2) and (ap_const_lv1_0 = and_ln454_fu_158_p2) and (ap_const_lv1_0 = and_ln449_fu_146_p2) and (ap_const_lv1_0 = and_ln444_fu_128_p2) and (ap_const_lv1_0 = and_ln439_fu_116_p2) and (ap_const_lv1_0 = and_ln434_fu_98_p2) and (icmp_ln429_fu_80_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_lv1_1 = and_ln454_fu_158_p2) and (ap_const_lv1_0 = and_ln449_fu_146_p2) and (ap_const_lv1_0 = and_ln444_fu_128_p2) and (ap_const_lv1_0 = and_ln439_fu_116_p2) and (ap_const_lv1_0 = and_ln434_fu_98_p2) and (icmp_ln429_fu_80_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_lv1_1 = and_ln449_fu_146_p2) and (ap_const_lv1_0 = and_ln444_fu_128_p2) and (ap_const_lv1_0 = and_ln439_fu_116_p2) and (ap_const_lv1_0 = and_ln434_fu_98_p2) and (icmp_ln429_fu_80_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_lv1_1 = and_ln444_fu_128_p2) and (ap_const_lv1_0 = and_ln439_fu_116_p2) and (ap_const_lv1_0 = and_ln434_fu_98_p2) and (icmp_ln429_fu_80_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_lv1_1 = and_ln439_fu_116_p2) and (ap_const_lv1_0 = and_ln434_fu_98_p2) and (icmp_ln429_fu_80_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_lv1_1 = and_ln434_fu_98_p2) and (icmp_ln429_fu_80_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln429_fu_80_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                bitSequence_decoded <= ap_const_lv1_0;
            elsif ((((ap_const_lv1_1 = and_ln474_fu_212_p2) and (ap_const_lv1_0 = and_ln469_fu_206_p2) and (ap_const_lv1_0 = and_ln464_fu_188_p2) and (ap_const_lv1_0 = and_ln459_fu_176_p2) and (ap_const_lv1_0 = and_ln454_fu_158_p2) and (ap_const_lv1_0 = and_ln449_fu_146_p2) and (ap_const_lv1_0 = and_ln444_fu_128_p2) and (ap_const_lv1_0 = and_ln439_fu_116_p2) and (ap_const_lv1_0 = and_ln434_fu_98_p2) and (icmp_ln429_fu_80_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_lv1_0 = and_ln474_fu_212_p2) and (ap_const_lv1_0 = and_ln469_fu_206_p2) and (ap_const_lv1_0 = and_ln464_fu_188_p2) and (ap_const_lv1_0 = and_ln459_fu_176_p2) and (ap_const_lv1_0 = and_ln454_fu_158_p2) and (ap_const_lv1_0 = and_ln449_fu_146_p2) and (ap_const_lv1_0 = and_ln444_fu_128_p2) and (ap_const_lv1_0 = and_ln439_fu_116_p2) and (ap_const_lv1_0 = and_ln434_fu_98_p2) and (icmp_ln429_fu_80_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln479_fu_224_p2)) or ((ap_const_lv1_0 = and_ln474_fu_212_p2) and (ap_const_lv1_0 = and_ln469_fu_206_p2) and (ap_const_lv1_0 = and_ln464_fu_188_p2) and (ap_const_lv1_0 = and_ln459_fu_176_p2) and (ap_const_lv1_0 = and_ln454_fu_158_p2) and (ap_const_lv1_0 = and_ln449_fu_146_p2) and (ap_const_lv1_0 = and_ln444_fu_128_p2) and (ap_const_lv1_0 = and_ln439_fu_116_p2) and (ap_const_lv1_0 = and_ln434_fu_98_p2) and (icmp_ln429_fu_80_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln479_fu_224_p2) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln484_fu_230_p2)) or ((ap_const_lv1_0 = and_ln474_fu_212_p2) and (ap_const_lv1_0 = and_ln469_fu_206_p2) and (ap_const_lv1_0 = and_ln464_fu_188_p2) and (ap_const_lv1_0 = and_ln459_fu_176_p2) and (ap_const_lv1_0 = and_ln454_fu_158_p2) and (ap_const_lv1_0 = and_ln449_fu_146_p2) and (ap_const_lv1_0 = and_ln444_fu_128_p2) and (ap_const_lv1_0 = and_ln439_fu_116_p2) and (ap_const_lv1_0 = and_ln434_fu_98_p2) and (icmp_ln429_fu_80_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln484_fu_230_p2) and (ap_const_lv1_0 = and_ln479_fu_224_p2) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln489_fu_242_p2)) or ((ap_const_lv1_0 = and_ln474_fu_212_p2) and (ap_const_lv1_0 = and_ln469_fu_206_p2) and (ap_const_lv1_0 = and_ln464_fu_188_p2) and (ap_const_lv1_0 = and_ln459_fu_176_p2) and (ap_const_lv1_0 = and_ln454_fu_158_p2) and (ap_const_lv1_0 = and_ln449_fu_146_p2) and (ap_const_lv1_0 = and_ln444_fu_128_p2) and (ap_const_lv1_0 = and_ln439_fu_116_p2) and (ap_const_lv1_0 = and_ln434_fu_98_p2) and (icmp_ln429_fu_80_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln489_fu_242_p2) and (ap_const_lv1_0 = and_ln484_fu_230_p2) and (ap_const_lv1_0 = and_ln479_fu_224_p2) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln494_fu_248_p2)) or ((ap_const_lv1_0 = and_ln474_fu_212_p2) and (ap_const_lv1_0 = and_ln469_fu_206_p2) and (ap_const_lv1_0 = and_ln464_fu_188_p2) and (ap_const_lv1_0 = and_ln459_fu_176_p2) and (ap_const_lv1_0 = and_ln454_fu_158_p2) and (ap_const_lv1_0 = and_ln449_fu_146_p2) and (ap_const_lv1_0 = and_ln444_fu_128_p2) and (ap_const_lv1_0 = and_ln439_fu_116_p2) and (ap_const_lv1_0 = and_ln434_fu_98_p2) and (icmp_ln429_fu_80_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln494_fu_248_p2) and (ap_const_lv1_0 = and_ln489_fu_242_p2) and (ap_const_lv1_0 = and_ln484_fu_230_p2) and (ap_const_lv1_0 = and_ln479_fu_224_p2) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln499_fu_260_p2)) or ((ap_const_lv1_0 = and_ln474_fu_212_p2) and (ap_const_lv1_0 = and_ln469_fu_206_p2) and (ap_const_lv1_0 = and_ln464_fu_188_p2) and (ap_const_lv1_0 = and_ln459_fu_176_p2) and (ap_const_lv1_0 = and_ln454_fu_158_p2) and (ap_const_lv1_0 = and_ln449_fu_146_p2) and (ap_const_lv1_0 = and_ln444_fu_128_p2) and (ap_const_lv1_0 = and_ln439_fu_116_p2) and (ap_const_lv1_0 = and_ln434_fu_98_p2) and (icmp_ln429_fu_80_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln499_fu_260_p2) and (ap_const_lv1_0 = and_ln494_fu_248_p2) and (ap_const_lv1_0 = and_ln489_fu_242_p2) and (ap_const_lv1_0 = and_ln484_fu_230_p2) and (ap_const_lv1_0 = and_ln479_fu_224_p2) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln504_fu_266_p2)) or ((ap_const_lv1_1 = and_ln469_fu_206_p2) and (ap_const_lv1_0 = and_ln464_fu_188_p2) and (ap_const_lv1_0 = and_ln459_fu_176_p2) and (ap_const_lv1_0 = and_ln454_fu_158_p2) and (ap_const_lv1_0 = and_ln449_fu_146_p2) and (ap_const_lv1_0 = and_ln444_fu_128_p2) and (ap_const_lv1_0 = and_ln439_fu_116_p2) and (ap_const_lv1_0 = and_ln434_fu_98_p2) and (icmp_ln429_fu_80_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                bitSequence_decoded <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0, ap_reset_start_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    and_ln434_fu_98_p2 <= (icmp_ln434_fu_86_p2 and icmp_ln434_1_fu_92_p2);
    and_ln439_fu_116_p2 <= (icmp_ln439_fu_104_p2 and icmp_ln439_1_fu_110_p2);
    and_ln444_fu_128_p2 <= (icmp_ln444_fu_122_p2 and icmp_ln439_fu_104_p2);
    and_ln449_fu_146_p2 <= (icmp_ln449_fu_134_p2 and icmp_ln449_1_fu_140_p2);
    and_ln454_fu_158_p2 <= (icmp_ln454_fu_152_p2 and icmp_ln449_fu_134_p2);
    and_ln459_fu_176_p2 <= (icmp_ln459_fu_164_p2 and icmp_ln459_1_fu_170_p2);
    and_ln464_fu_188_p2 <= (icmp_ln464_fu_182_p2 and icmp_ln459_fu_164_p2);
    and_ln469_fu_206_p2 <= (icmp_ln469_fu_194_p2 and icmp_ln469_1_fu_200_p2);
    and_ln474_fu_212_p2 <= (icmp_ln469_fu_194_p2 and icmp_ln434_1_fu_92_p2);
    and_ln479_fu_224_p2 <= (icmp_ln479_fu_218_p2 and icmp_ln439_1_fu_110_p2);
    and_ln484_fu_230_p2 <= (icmp_ln479_fu_218_p2 and icmp_ln444_fu_122_p2);
    and_ln489_fu_242_p2 <= (icmp_ln489_fu_236_p2 and icmp_ln449_1_fu_140_p2);
    and_ln494_fu_248_p2 <= (icmp_ln489_fu_236_p2 and icmp_ln454_fu_152_p2);
    and_ln499_fu_260_p2 <= (icmp_ln499_fu_254_p2 and icmp_ln459_1_fu_170_p2);
    and_ln504_fu_266_p2 <= (icmp_ln499_fu_254_p2 and icmp_ln464_fu_182_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_logic_0 = ap_ce) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_start_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_start_pp0 <= ap_const_logic_1;
        else 
            ap_reset_start_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= bitSequence_decoded;
    icmp_ln429_fu_80_p2 <= "1" when (or_ln429_fu_74_p2 = ap_const_lv3_0) else "0";
    icmp_ln434_1_fu_92_p2 <= "1" when (trunc_ln429_1_fu_70_p1 = ap_const_lv3_1) else "0";
    icmp_ln434_fu_86_p2 <= "1" when (trunc_ln429_fu_66_p1 = ap_const_lv3_0) else "0";
    icmp_ln439_1_fu_110_p2 <= "1" when (trunc_ln429_1_fu_70_p1 = ap_const_lv3_2) else "0";
    icmp_ln439_fu_104_p2 <= "1" when (trunc_ln429_fu_66_p1 = ap_const_lv3_1) else "0";
    icmp_ln444_fu_122_p2 <= "1" when (trunc_ln429_1_fu_70_p1 = ap_const_lv3_3) else "0";
    icmp_ln449_1_fu_140_p2 <= "1" when (trunc_ln429_1_fu_70_p1 = ap_const_lv3_4) else "0";
    icmp_ln449_fu_134_p2 <= "1" when (trunc_ln429_fu_66_p1 = ap_const_lv3_2) else "0";
    icmp_ln454_fu_152_p2 <= "1" when (trunc_ln429_1_fu_70_p1 = ap_const_lv3_5) else "0";
    icmp_ln459_1_fu_170_p2 <= "1" when (trunc_ln429_1_fu_70_p1 = ap_const_lv3_6) else "0";
    icmp_ln459_fu_164_p2 <= "1" when (trunc_ln429_fu_66_p1 = ap_const_lv3_3) else "0";
    icmp_ln464_fu_182_p2 <= "1" when (trunc_ln429_1_fu_70_p1 = ap_const_lv3_7) else "0";
    icmp_ln469_1_fu_200_p2 <= "1" when (trunc_ln429_1_fu_70_p1 = ap_const_lv3_0) else "0";
    icmp_ln469_fu_194_p2 <= "1" when (trunc_ln429_fu_66_p1 = ap_const_lv3_4) else "0";
    icmp_ln479_fu_218_p2 <= "1" when (trunc_ln429_fu_66_p1 = ap_const_lv3_5) else "0";
    icmp_ln489_fu_236_p2 <= "1" when (trunc_ln429_fu_66_p1 = ap_const_lv3_6) else "0";
    icmp_ln499_fu_254_p2 <= "1" when (trunc_ln429_fu_66_p1 = ap_const_lv3_7) else "0";
    or_ln429_fu_74_p2 <= (trunc_ln429_fu_66_p1 or trunc_ln429_1_fu_70_p1);
    trunc_ln429_1_fu_70_p1 <= stateA(3 - 1 downto 0);
    trunc_ln429_fu_66_p1 <= stateB(3 - 1 downto 0);
end behav;
