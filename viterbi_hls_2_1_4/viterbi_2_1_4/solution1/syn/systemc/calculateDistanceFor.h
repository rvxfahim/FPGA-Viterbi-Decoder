// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _calculateDistanceFor_HH_
#define _calculateDistanceFor_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct calculateDistanceFor : public sc_module {
    // Port declarations 7
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<1> > p_read;
    sc_in< sc_lv<1> > p_read1;
    sc_in< sc_logic > firstBit;
    sc_in< sc_logic > secondBit;
    sc_in< sc_lv<8> > previousDistance;
    sc_out< sc_lv<8> > ap_return;


    // Module declarations
    calculateDistanceFor(sc_module_name name);
    SC_HAS_PROCESS(calculateDistanceFor);

    ~calculateDistanceFor();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<1> > xor_ln233_fu_48_p1;
    sc_signal< sc_lv<1> > xor_ln233_1_fu_54_p1;
    sc_signal< sc_lv<1> > xor_ln233_fu_48_p2;
    sc_signal< sc_lv<1> > xor_ln233_1_fu_54_p2;
    sc_signal< sc_lv<1> > and_ln233_fu_60_p2;
    sc_signal< sc_lv<8> > select_ln233_fu_66_p3;
    sc_signal< sc_lv<1> > or_ln233_fu_80_p2;
    sc_signal< sc_lv<8> > add_ln233_fu_74_p2;
    static const sc_logic ap_const_logic_1;
    static const bool ap_const_boolean_1;
    static const sc_lv<8> ap_const_lv8_2;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_add_ln233_fu_74_p2();
    void thread_and_ln233_fu_60_p2();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_or_ln233_fu_80_p2();
    void thread_select_ln233_fu_66_p3();
    void thread_xor_ln233_1_fu_54_p1();
    void thread_xor_ln233_1_fu_54_p2();
    void thread_xor_ln233_fu_48_p1();
    void thread_xor_ln233_fu_48_p2();
};

}

using namespace ap_rtl;

#endif
