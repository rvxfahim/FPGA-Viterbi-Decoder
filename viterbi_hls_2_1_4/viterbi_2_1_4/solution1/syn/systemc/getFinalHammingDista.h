// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _getFinalHammingDista_HH_
#define _getFinalHammingDista_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct getFinalHammingDista : public sc_module {
    // Port declarations 21
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_logic > ap_ce;
    sc_out< sc_lv<3> > HammingTable_hammingDistances_finalStates_address0;
    sc_out< sc_logic > HammingTable_hammingDistances_finalStates_ce0;
    sc_in< sc_lv<8> > HammingTable_hammingDistances_finalStates_q0;
    sc_out< sc_lv<3> > HammingTable_hammingDistances_finalStates_address1;
    sc_out< sc_logic > HammingTable_hammingDistances_finalStates_ce1;
    sc_in< sc_lv<8> > HammingTable_hammingDistances_finalStates_q1;
    sc_out< sc_lv<8> > ap_return_0;
    sc_out< sc_lv<8> > ap_return_1;
    sc_out< sc_lv<8> > ap_return_2;
    sc_out< sc_lv<8> > ap_return_3;
    sc_out< sc_lv<8> > ap_return_4;
    sc_out< sc_lv<8> > ap_return_5;
    sc_out< sc_lv<8> > ap_return_6;
    sc_out< sc_lv<8> > ap_return_7;


    // Module declarations
    getFinalHammingDista(sc_module_name name);
    SC_HAS_PROCESS(getFinalHammingDista);

    ~getFinalHammingDista();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<4> > ap_CS_iter0_fsm;
    sc_signal< sc_logic > ap_CS_iter0_fsm_state1;
    sc_signal< sc_lv<2> > ap_CS_iter1_fsm;
    sc_signal< sc_logic > ap_CS_iter1_fsm_state0;
    sc_signal< sc_logic > ap_CS_iter0_fsm_state4;
    sc_signal< bool > ap_block_state4_pp0_stage3_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter1;
    sc_signal< sc_logic > ap_CS_iter1_fsm_state5;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< sc_lv<8> > HammingTable_hamming_27_reg_161;
    sc_signal< sc_logic > ap_CS_iter0_fsm_state2;
    sc_signal< bool > ap_block_state2_pp0_stage1_iter0;
    sc_signal< sc_lv<8> > HammingTable_hamming_27_reg_161_pp0_iter0_reg;
    sc_signal< sc_lv<8> > HammingTable_hamming_29_reg_166;
    sc_signal< sc_lv<8> > HammingTable_hamming_29_reg_166_pp0_iter0_reg;
    sc_signal< sc_lv<8> > HammingTable_hamming_31_reg_181;
    sc_signal< sc_logic > ap_CS_iter0_fsm_state3;
    sc_signal< bool > ap_block_state3_pp0_stage2_iter0;
    sc_signal< sc_lv<8> > HammingTable_hamming_31_reg_181_pp0_iter0_reg;
    sc_signal< sc_lv<8> > HammingTable_hamming_33_reg_186;
    sc_signal< sc_lv<8> > HammingTable_hamming_33_reg_186_pp0_iter0_reg;
    sc_signal< sc_lv<8> > HammingTable_hamming_35_reg_201;
    sc_signal< sc_lv<8> > HammingTable_hamming_37_reg_206;
    sc_signal< sc_lv<4> > ap_NS_iter0_fsm;
    sc_signal< sc_lv<2> > ap_NS_iter1_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_iter0_fsm_state1;
    static const sc_lv<4> ap_ST_iter0_fsm_state2;
    static const sc_lv<4> ap_ST_iter0_fsm_state3;
    static const sc_lv<4> ap_ST_iter0_fsm_state4;
    static const sc_lv<2> ap_ST_iter1_fsm_state5;
    static const sc_lv<2> ap_ST_iter1_fsm_state0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<64> ap_const_lv64_5;
    static const sc_lv<64> ap_const_lv64_6;
    static const sc_lv<64> ap_const_lv64_7;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_HammingTable_hammingDistances_finalStates_address0();
    void thread_HammingTable_hammingDistances_finalStates_address1();
    void thread_HammingTable_hammingDistances_finalStates_ce0();
    void thread_HammingTable_hammingDistances_finalStates_ce1();
    void thread_ap_CS_iter0_fsm_state1();
    void thread_ap_CS_iter0_fsm_state2();
    void thread_ap_CS_iter0_fsm_state3();
    void thread_ap_CS_iter0_fsm_state4();
    void thread_ap_CS_iter1_fsm_state0();
    void thread_ap_CS_iter1_fsm_state5();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage1_iter0();
    void thread_ap_block_state3_pp0_stage2_iter0();
    void thread_ap_block_state4_pp0_stage3_iter0();
    void thread_ap_block_state5_pp0_stage0_iter1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return_0();
    void thread_ap_return_1();
    void thread_ap_return_2();
    void thread_ap_return_3();
    void thread_ap_return_4();
    void thread_ap_return_5();
    void thread_ap_return_6();
    void thread_ap_return_7();
    void thread_ap_NS_iter0_fsm();
    void thread_ap_NS_iter1_fsm();
};

}

using namespace ap_rtl;

#endif
