// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "getSequence.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic getSequence::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic getSequence::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> getSequence::ap_ST_fsm_pp0_stage0 = "1";
const bool getSequence::ap_const_boolean_1 = true;
const sc_lv<32> getSequence::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool getSequence::ap_const_boolean_0 = false;
const sc_lv<1> getSequence::ap_const_lv1_0 = "0";
const sc_lv<1> getSequence::ap_const_lv1_1 = "1";
const sc_lv<3> getSequence::ap_const_lv3_0 = "000";
const sc_lv<3> getSequence::ap_const_lv3_1 = "1";
const sc_lv<3> getSequence::ap_const_lv3_2 = "10";
const sc_lv<3> getSequence::ap_const_lv3_3 = "11";
const sc_lv<3> getSequence::ap_const_lv3_4 = "100";
const sc_lv<3> getSequence::ap_const_lv3_5 = "101";
const sc_lv<3> getSequence::ap_const_lv3_6 = "110";
const sc_lv<3> getSequence::ap_const_lv3_7 = "111";

getSequence::getSequence(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_and_ln434_fu_98_p2);
    sensitive << ( icmp_ln434_fu_86_p2 );
    sensitive << ( icmp_ln434_1_fu_92_p2 );

    SC_METHOD(thread_and_ln439_fu_116_p2);
    sensitive << ( icmp_ln439_fu_104_p2 );
    sensitive << ( icmp_ln439_1_fu_110_p2 );

    SC_METHOD(thread_and_ln444_fu_128_p2);
    sensitive << ( icmp_ln439_fu_104_p2 );
    sensitive << ( icmp_ln444_fu_122_p2 );

    SC_METHOD(thread_and_ln449_fu_146_p2);
    sensitive << ( icmp_ln449_fu_134_p2 );
    sensitive << ( icmp_ln449_1_fu_140_p2 );

    SC_METHOD(thread_and_ln454_fu_158_p2);
    sensitive << ( icmp_ln449_fu_134_p2 );
    sensitive << ( icmp_ln454_fu_152_p2 );

    SC_METHOD(thread_and_ln459_fu_176_p2);
    sensitive << ( icmp_ln459_fu_164_p2 );
    sensitive << ( icmp_ln459_1_fu_170_p2 );

    SC_METHOD(thread_and_ln464_fu_188_p2);
    sensitive << ( icmp_ln459_fu_164_p2 );
    sensitive << ( icmp_ln464_fu_182_p2 );

    SC_METHOD(thread_and_ln469_fu_206_p2);
    sensitive << ( icmp_ln469_fu_194_p2 );
    sensitive << ( icmp_ln469_1_fu_200_p2 );

    SC_METHOD(thread_and_ln474_fu_212_p2);
    sensitive << ( icmp_ln434_1_fu_92_p2 );
    sensitive << ( icmp_ln469_fu_194_p2 );

    SC_METHOD(thread_and_ln479_fu_224_p2);
    sensitive << ( icmp_ln439_1_fu_110_p2 );
    sensitive << ( icmp_ln479_fu_218_p2 );

    SC_METHOD(thread_and_ln484_fu_230_p2);
    sensitive << ( icmp_ln444_fu_122_p2 );
    sensitive << ( icmp_ln479_fu_218_p2 );

    SC_METHOD(thread_and_ln489_fu_242_p2);
    sensitive << ( icmp_ln449_1_fu_140_p2 );
    sensitive << ( icmp_ln489_fu_236_p2 );

    SC_METHOD(thread_and_ln494_fu_248_p2);
    sensitive << ( icmp_ln454_fu_152_p2 );
    sensitive << ( icmp_ln489_fu_236_p2 );

    SC_METHOD(thread_and_ln499_fu_260_p2);
    sensitive << ( icmp_ln459_1_fu_170_p2 );
    sensitive << ( icmp_ln499_fu_254_p2 );

    SC_METHOD(thread_and_ln504_fu_266_p2);
    sensitive << ( icmp_ln464_fu_182_p2 );
    sensitive << ( icmp_ln499_fu_254_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_start );
    sensitive << ( ap_ce );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_idle_pp0_0to0);
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to0 );

    SC_METHOD(thread_ap_reset_start_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to0 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( bitSequence_decoded );

    SC_METHOD(thread_icmp_ln429_fu_80_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( or_ln429_fu_74_p2 );

    SC_METHOD(thread_icmp_ln434_1_fu_92_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( icmp_ln429_fu_80_p2 );
    sensitive << ( trunc_ln429_1_fu_70_p1 );

    SC_METHOD(thread_icmp_ln434_fu_86_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( icmp_ln429_fu_80_p2 );
    sensitive << ( trunc_ln429_fu_66_p1 );

    SC_METHOD(thread_icmp_ln439_1_fu_110_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( icmp_ln429_fu_80_p2 );
    sensitive << ( and_ln434_fu_98_p2 );
    sensitive << ( trunc_ln429_1_fu_70_p1 );

    SC_METHOD(thread_icmp_ln439_fu_104_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( icmp_ln429_fu_80_p2 );
    sensitive << ( and_ln434_fu_98_p2 );
    sensitive << ( trunc_ln429_fu_66_p1 );

    SC_METHOD(thread_icmp_ln444_fu_122_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( icmp_ln429_fu_80_p2 );
    sensitive << ( and_ln434_fu_98_p2 );
    sensitive << ( and_ln439_fu_116_p2 );
    sensitive << ( trunc_ln429_1_fu_70_p1 );

    SC_METHOD(thread_icmp_ln449_1_fu_140_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( icmp_ln429_fu_80_p2 );
    sensitive << ( and_ln434_fu_98_p2 );
    sensitive << ( and_ln439_fu_116_p2 );
    sensitive << ( and_ln444_fu_128_p2 );
    sensitive << ( trunc_ln429_1_fu_70_p1 );

    SC_METHOD(thread_icmp_ln449_fu_134_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( icmp_ln429_fu_80_p2 );
    sensitive << ( and_ln434_fu_98_p2 );
    sensitive << ( and_ln439_fu_116_p2 );
    sensitive << ( and_ln444_fu_128_p2 );
    sensitive << ( trunc_ln429_fu_66_p1 );

    SC_METHOD(thread_icmp_ln454_fu_152_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( icmp_ln429_fu_80_p2 );
    sensitive << ( and_ln434_fu_98_p2 );
    sensitive << ( and_ln439_fu_116_p2 );
    sensitive << ( and_ln444_fu_128_p2 );
    sensitive << ( and_ln449_fu_146_p2 );
    sensitive << ( trunc_ln429_1_fu_70_p1 );

    SC_METHOD(thread_icmp_ln459_1_fu_170_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( icmp_ln429_fu_80_p2 );
    sensitive << ( and_ln434_fu_98_p2 );
    sensitive << ( and_ln439_fu_116_p2 );
    sensitive << ( and_ln444_fu_128_p2 );
    sensitive << ( and_ln449_fu_146_p2 );
    sensitive << ( and_ln454_fu_158_p2 );
    sensitive << ( trunc_ln429_1_fu_70_p1 );

    SC_METHOD(thread_icmp_ln459_fu_164_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( icmp_ln429_fu_80_p2 );
    sensitive << ( and_ln434_fu_98_p2 );
    sensitive << ( and_ln439_fu_116_p2 );
    sensitive << ( and_ln444_fu_128_p2 );
    sensitive << ( and_ln449_fu_146_p2 );
    sensitive << ( and_ln454_fu_158_p2 );
    sensitive << ( trunc_ln429_fu_66_p1 );

    SC_METHOD(thread_icmp_ln464_fu_182_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( icmp_ln429_fu_80_p2 );
    sensitive << ( and_ln434_fu_98_p2 );
    sensitive << ( and_ln439_fu_116_p2 );
    sensitive << ( and_ln444_fu_128_p2 );
    sensitive << ( and_ln449_fu_146_p2 );
    sensitive << ( and_ln454_fu_158_p2 );
    sensitive << ( and_ln459_fu_176_p2 );
    sensitive << ( trunc_ln429_1_fu_70_p1 );

    SC_METHOD(thread_icmp_ln469_1_fu_200_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( icmp_ln429_fu_80_p2 );
    sensitive << ( and_ln434_fu_98_p2 );
    sensitive << ( and_ln439_fu_116_p2 );
    sensitive << ( and_ln444_fu_128_p2 );
    sensitive << ( and_ln449_fu_146_p2 );
    sensitive << ( and_ln454_fu_158_p2 );
    sensitive << ( and_ln459_fu_176_p2 );
    sensitive << ( and_ln464_fu_188_p2 );
    sensitive << ( trunc_ln429_1_fu_70_p1 );

    SC_METHOD(thread_icmp_ln469_fu_194_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( icmp_ln429_fu_80_p2 );
    sensitive << ( and_ln434_fu_98_p2 );
    sensitive << ( and_ln439_fu_116_p2 );
    sensitive << ( and_ln444_fu_128_p2 );
    sensitive << ( and_ln449_fu_146_p2 );
    sensitive << ( and_ln454_fu_158_p2 );
    sensitive << ( and_ln459_fu_176_p2 );
    sensitive << ( and_ln464_fu_188_p2 );
    sensitive << ( trunc_ln429_fu_66_p1 );

    SC_METHOD(thread_icmp_ln479_fu_218_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( icmp_ln429_fu_80_p2 );
    sensitive << ( and_ln434_fu_98_p2 );
    sensitive << ( and_ln439_fu_116_p2 );
    sensitive << ( and_ln444_fu_128_p2 );
    sensitive << ( and_ln449_fu_146_p2 );
    sensitive << ( and_ln454_fu_158_p2 );
    sensitive << ( and_ln459_fu_176_p2 );
    sensitive << ( and_ln464_fu_188_p2 );
    sensitive << ( and_ln469_fu_206_p2 );
    sensitive << ( and_ln474_fu_212_p2 );
    sensitive << ( trunc_ln429_fu_66_p1 );

    SC_METHOD(thread_icmp_ln489_fu_236_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( icmp_ln429_fu_80_p2 );
    sensitive << ( and_ln434_fu_98_p2 );
    sensitive << ( and_ln439_fu_116_p2 );
    sensitive << ( and_ln444_fu_128_p2 );
    sensitive << ( and_ln449_fu_146_p2 );
    sensitive << ( and_ln454_fu_158_p2 );
    sensitive << ( and_ln459_fu_176_p2 );
    sensitive << ( and_ln464_fu_188_p2 );
    sensitive << ( and_ln469_fu_206_p2 );
    sensitive << ( and_ln474_fu_212_p2 );
    sensitive << ( and_ln479_fu_224_p2 );
    sensitive << ( and_ln484_fu_230_p2 );
    sensitive << ( trunc_ln429_fu_66_p1 );

    SC_METHOD(thread_icmp_ln499_fu_254_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( icmp_ln429_fu_80_p2 );
    sensitive << ( and_ln434_fu_98_p2 );
    sensitive << ( and_ln439_fu_116_p2 );
    sensitive << ( and_ln444_fu_128_p2 );
    sensitive << ( and_ln449_fu_146_p2 );
    sensitive << ( and_ln454_fu_158_p2 );
    sensitive << ( and_ln459_fu_176_p2 );
    sensitive << ( and_ln464_fu_188_p2 );
    sensitive << ( and_ln469_fu_206_p2 );
    sensitive << ( and_ln474_fu_212_p2 );
    sensitive << ( and_ln479_fu_224_p2 );
    sensitive << ( and_ln484_fu_230_p2 );
    sensitive << ( and_ln489_fu_242_p2 );
    sensitive << ( and_ln494_fu_248_p2 );
    sensitive << ( trunc_ln429_fu_66_p1 );

    SC_METHOD(thread_or_ln429_fu_74_p2);
    sensitive << ( trunc_ln429_fu_66_p1 );
    sensitive << ( trunc_ln429_1_fu_70_p1 );

    SC_METHOD(thread_trunc_ln429_1_fu_70_p1);
    sensitive << ( stateA );

    SC_METHOD(thread_trunc_ln429_fu_66_p1);
    sensitive << ( stateB );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );
    sensitive << ( ap_reset_start_pp0 );

    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    bitSequence_decoded = "0";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "getSequence_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_ce, "(port)ap_ce");
    sc_trace(mVcdFile, stateA, "(port)stateA");
    sc_trace(mVcdFile, stateB, "(port)stateB");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, bitSequence_decoded, "bitSequence_decoded");
    sc_trace(mVcdFile, icmp_ln429_fu_80_p2, "icmp_ln429_fu_80_p2");
    sc_trace(mVcdFile, and_ln434_fu_98_p2, "and_ln434_fu_98_p2");
    sc_trace(mVcdFile, and_ln439_fu_116_p2, "and_ln439_fu_116_p2");
    sc_trace(mVcdFile, and_ln444_fu_128_p2, "and_ln444_fu_128_p2");
    sc_trace(mVcdFile, and_ln449_fu_146_p2, "and_ln449_fu_146_p2");
    sc_trace(mVcdFile, and_ln454_fu_158_p2, "and_ln454_fu_158_p2");
    sc_trace(mVcdFile, and_ln459_fu_176_p2, "and_ln459_fu_176_p2");
    sc_trace(mVcdFile, and_ln464_fu_188_p2, "and_ln464_fu_188_p2");
    sc_trace(mVcdFile, and_ln469_fu_206_p2, "and_ln469_fu_206_p2");
    sc_trace(mVcdFile, and_ln474_fu_212_p2, "and_ln474_fu_212_p2");
    sc_trace(mVcdFile, and_ln479_fu_224_p2, "and_ln479_fu_224_p2");
    sc_trace(mVcdFile, and_ln484_fu_230_p2, "and_ln484_fu_230_p2");
    sc_trace(mVcdFile, and_ln489_fu_242_p2, "and_ln489_fu_242_p2");
    sc_trace(mVcdFile, and_ln494_fu_248_p2, "and_ln494_fu_248_p2");
    sc_trace(mVcdFile, and_ln499_fu_260_p2, "and_ln499_fu_260_p2");
    sc_trace(mVcdFile, and_ln504_fu_266_p2, "and_ln504_fu_266_p2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, trunc_ln429_fu_66_p1, "trunc_ln429_fu_66_p1");
    sc_trace(mVcdFile, trunc_ln429_1_fu_70_p1, "trunc_ln429_1_fu_70_p1");
    sc_trace(mVcdFile, or_ln429_fu_74_p2, "or_ln429_fu_74_p2");
    sc_trace(mVcdFile, icmp_ln434_fu_86_p2, "icmp_ln434_fu_86_p2");
    sc_trace(mVcdFile, icmp_ln434_1_fu_92_p2, "icmp_ln434_1_fu_92_p2");
    sc_trace(mVcdFile, icmp_ln439_fu_104_p2, "icmp_ln439_fu_104_p2");
    sc_trace(mVcdFile, icmp_ln439_1_fu_110_p2, "icmp_ln439_1_fu_110_p2");
    sc_trace(mVcdFile, icmp_ln444_fu_122_p2, "icmp_ln444_fu_122_p2");
    sc_trace(mVcdFile, icmp_ln449_fu_134_p2, "icmp_ln449_fu_134_p2");
    sc_trace(mVcdFile, icmp_ln449_1_fu_140_p2, "icmp_ln449_1_fu_140_p2");
    sc_trace(mVcdFile, icmp_ln454_fu_152_p2, "icmp_ln454_fu_152_p2");
    sc_trace(mVcdFile, icmp_ln459_fu_164_p2, "icmp_ln459_fu_164_p2");
    sc_trace(mVcdFile, icmp_ln459_1_fu_170_p2, "icmp_ln459_1_fu_170_p2");
    sc_trace(mVcdFile, icmp_ln464_fu_182_p2, "icmp_ln464_fu_182_p2");
    sc_trace(mVcdFile, icmp_ln469_fu_194_p2, "icmp_ln469_fu_194_p2");
    sc_trace(mVcdFile, icmp_ln469_1_fu_200_p2, "icmp_ln469_1_fu_200_p2");
    sc_trace(mVcdFile, icmp_ln479_fu_218_p2, "icmp_ln479_fu_218_p2");
    sc_trace(mVcdFile, icmp_ln489_fu_236_p2, "icmp_ln489_fu_236_p2");
    sc_trace(mVcdFile, icmp_ln499_fu_254_p2, "icmp_ln499_fu_254_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0_0to0, "ap_idle_pp0_0to0");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_reset_start_pp0, "ap_reset_start_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

getSequence::~getSequence() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void getSequence::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln429_fu_80_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln434_fu_98_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln439_fu_116_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln444_fu_128_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln449_fu_146_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln454_fu_158_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln459_fu_176_p2.read()) && 
          esl_seteq<1,1,1>(and_ln464_fu_188_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln429_fu_80_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln434_fu_98_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln439_fu_116_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln444_fu_128_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln449_fu_146_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln454_fu_158_p2.read()) && 
          esl_seteq<1,1,1>(and_ln459_fu_176_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln429_fu_80_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln434_fu_98_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln439_fu_116_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln444_fu_128_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln449_fu_146_p2.read()) && 
          esl_seteq<1,1,1>(and_ln454_fu_158_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln429_fu_80_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln434_fu_98_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln439_fu_116_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln444_fu_128_p2.read()) && 
          esl_seteq<1,1,1>(and_ln449_fu_146_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln429_fu_80_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln434_fu_98_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln439_fu_116_p2.read()) && 
          esl_seteq<1,1,1>(and_ln444_fu_128_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln429_fu_80_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln434_fu_98_p2.read()) && 
          esl_seteq<1,1,1>(and_ln439_fu_116_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln429_fu_80_p2.read()) && 
          esl_seteq<1,1,1>(and_ln434_fu_98_p2.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(icmp_ln429_fu_80_p2.read(), ap_const_lv1_1)))) {
        bitSequence_decoded = ap_const_lv1_0;
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln429_fu_80_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln434_fu_98_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln439_fu_116_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln444_fu_128_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln449_fu_146_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln454_fu_158_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln459_fu_176_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln464_fu_188_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln469_fu_206_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln474_fu_212_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln479_fu_224_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln484_fu_230_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln489_fu_242_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln494_fu_248_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln499_fu_260_p2.read()) && 
                 esl_seteq<1,1,1>(and_ln504_fu_266_p2.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln429_fu_80_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln434_fu_98_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln439_fu_116_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln444_fu_128_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln449_fu_146_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln454_fu_158_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln459_fu_176_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln464_fu_188_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln469_fu_206_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln474_fu_212_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln479_fu_224_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln484_fu_230_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln489_fu_242_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln494_fu_248_p2.read()) && 
                 esl_seteq<1,1,1>(and_ln499_fu_260_p2.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln429_fu_80_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln434_fu_98_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln439_fu_116_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln444_fu_128_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln449_fu_146_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln454_fu_158_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln459_fu_176_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln464_fu_188_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln469_fu_206_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln474_fu_212_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln479_fu_224_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln484_fu_230_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln489_fu_242_p2.read()) && 
                 esl_seteq<1,1,1>(and_ln494_fu_248_p2.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln429_fu_80_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln434_fu_98_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln439_fu_116_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln444_fu_128_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln449_fu_146_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln454_fu_158_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln459_fu_176_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln464_fu_188_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln469_fu_206_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln474_fu_212_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln479_fu_224_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln484_fu_230_p2.read()) && 
                 esl_seteq<1,1,1>(and_ln489_fu_242_p2.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln429_fu_80_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln434_fu_98_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln439_fu_116_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln444_fu_128_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln449_fu_146_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln454_fu_158_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln459_fu_176_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln464_fu_188_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln469_fu_206_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln474_fu_212_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln479_fu_224_p2.read()) && 
                 esl_seteq<1,1,1>(and_ln484_fu_230_p2.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln429_fu_80_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln434_fu_98_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln439_fu_116_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln444_fu_128_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln449_fu_146_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln454_fu_158_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln459_fu_176_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln464_fu_188_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln469_fu_206_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln474_fu_212_p2.read()) && 
                 esl_seteq<1,1,1>(and_ln479_fu_224_p2.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln429_fu_80_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln434_fu_98_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln439_fu_116_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln444_fu_128_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln449_fu_146_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln454_fu_158_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln459_fu_176_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln464_fu_188_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln469_fu_206_p2.read()) && 
                 esl_seteq<1,1,1>(and_ln474_fu_212_p2.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
                 esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln429_fu_80_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln434_fu_98_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln439_fu_116_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln444_fu_128_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln449_fu_146_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln454_fu_158_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln459_fu_176_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, and_ln464_fu_188_p2.read()) && 
                 esl_seteq<1,1,1>(and_ln469_fu_206_p2.read(), ap_const_lv1_1)))) {
        bitSequence_decoded = ap_const_lv1_1;
    }
}

void getSequence::thread_and_ln434_fu_98_p2() {
    and_ln434_fu_98_p2 = (icmp_ln434_fu_86_p2.read() & icmp_ln434_1_fu_92_p2.read());
}

void getSequence::thread_and_ln439_fu_116_p2() {
    and_ln439_fu_116_p2 = (icmp_ln439_fu_104_p2.read() & icmp_ln439_1_fu_110_p2.read());
}

void getSequence::thread_and_ln444_fu_128_p2() {
    and_ln444_fu_128_p2 = (icmp_ln439_fu_104_p2.read() & icmp_ln444_fu_122_p2.read());
}

void getSequence::thread_and_ln449_fu_146_p2() {
    and_ln449_fu_146_p2 = (icmp_ln449_fu_134_p2.read() & icmp_ln449_1_fu_140_p2.read());
}

void getSequence::thread_and_ln454_fu_158_p2() {
    and_ln454_fu_158_p2 = (icmp_ln449_fu_134_p2.read() & icmp_ln454_fu_152_p2.read());
}

void getSequence::thread_and_ln459_fu_176_p2() {
    and_ln459_fu_176_p2 = (icmp_ln459_fu_164_p2.read() & icmp_ln459_1_fu_170_p2.read());
}

void getSequence::thread_and_ln464_fu_188_p2() {
    and_ln464_fu_188_p2 = (icmp_ln459_fu_164_p2.read() & icmp_ln464_fu_182_p2.read());
}

void getSequence::thread_and_ln469_fu_206_p2() {
    and_ln469_fu_206_p2 = (icmp_ln469_fu_194_p2.read() & icmp_ln469_1_fu_200_p2.read());
}

void getSequence::thread_and_ln474_fu_212_p2() {
    and_ln474_fu_212_p2 = (icmp_ln469_fu_194_p2.read() & icmp_ln434_1_fu_92_p2.read());
}

void getSequence::thread_and_ln479_fu_224_p2() {
    and_ln479_fu_224_p2 = (icmp_ln479_fu_218_p2.read() & icmp_ln439_1_fu_110_p2.read());
}

void getSequence::thread_and_ln484_fu_230_p2() {
    and_ln484_fu_230_p2 = (icmp_ln479_fu_218_p2.read() & icmp_ln444_fu_122_p2.read());
}

void getSequence::thread_and_ln489_fu_242_p2() {
    and_ln489_fu_242_p2 = (icmp_ln489_fu_236_p2.read() & icmp_ln449_1_fu_140_p2.read());
}

void getSequence::thread_and_ln494_fu_248_p2() {
    and_ln494_fu_248_p2 = (icmp_ln489_fu_236_p2.read() & icmp_ln454_fu_152_p2.read());
}

void getSequence::thread_and_ln499_fu_260_p2() {
    and_ln499_fu_260_p2 = (icmp_ln499_fu_254_p2.read() & icmp_ln459_1_fu_170_p2.read());
}

void getSequence::thread_and_ln504_fu_266_p2() {
    and_ln504_fu_266_p2 = (icmp_ln499_fu_254_p2.read() & icmp_ln464_fu_182_p2.read());
}

void getSequence::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void getSequence::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getSequence::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()));
}

void getSequence::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read())) || esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_0));
}

void getSequence::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read());
}

void getSequence::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void getSequence::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void getSequence::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void getSequence::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void getSequence::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void getSequence::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void getSequence::thread_ap_idle_pp0_0to0() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read())) {
        ap_idle_pp0_0to0 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to0 = ap_const_logic_0;
    }
}

void getSequence::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void getSequence::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to0.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void getSequence::thread_ap_reset_start_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()))) {
        ap_reset_start_pp0 = ap_const_logic_1;
    } else {
        ap_reset_start_pp0 = ap_const_logic_0;
    }
}

void getSequence::thread_ap_return() {
    ap_return = bitSequence_decoded.read();
}

void getSequence::thread_icmp_ln429_fu_80_p2() {
    icmp_ln429_fu_80_p2 = (!or_ln429_fu_74_p2.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(or_ln429_fu_74_p2.read() == ap_const_lv3_0);
}

void getSequence::thread_icmp_ln434_1_fu_92_p2() {
    icmp_ln434_1_fu_92_p2 = (!trunc_ln429_1_fu_70_p1.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln429_1_fu_70_p1.read() == ap_const_lv3_1);
}

void getSequence::thread_icmp_ln434_fu_86_p2() {
    icmp_ln434_fu_86_p2 = (!trunc_ln429_fu_66_p1.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln429_fu_66_p1.read() == ap_const_lv3_0);
}

void getSequence::thread_icmp_ln439_1_fu_110_p2() {
    icmp_ln439_1_fu_110_p2 = (!trunc_ln429_1_fu_70_p1.read().is_01() || !ap_const_lv3_2.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln429_1_fu_70_p1.read() == ap_const_lv3_2);
}

void getSequence::thread_icmp_ln439_fu_104_p2() {
    icmp_ln439_fu_104_p2 = (!trunc_ln429_fu_66_p1.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln429_fu_66_p1.read() == ap_const_lv3_1);
}

void getSequence::thread_icmp_ln444_fu_122_p2() {
    icmp_ln444_fu_122_p2 = (!trunc_ln429_1_fu_70_p1.read().is_01() || !ap_const_lv3_3.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln429_1_fu_70_p1.read() == ap_const_lv3_3);
}

void getSequence::thread_icmp_ln449_1_fu_140_p2() {
    icmp_ln449_1_fu_140_p2 = (!trunc_ln429_1_fu_70_p1.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln429_1_fu_70_p1.read() == ap_const_lv3_4);
}

void getSequence::thread_icmp_ln449_fu_134_p2() {
    icmp_ln449_fu_134_p2 = (!trunc_ln429_fu_66_p1.read().is_01() || !ap_const_lv3_2.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln429_fu_66_p1.read() == ap_const_lv3_2);
}

void getSequence::thread_icmp_ln454_fu_152_p2() {
    icmp_ln454_fu_152_p2 = (!trunc_ln429_1_fu_70_p1.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln429_1_fu_70_p1.read() == ap_const_lv3_5);
}

void getSequence::thread_icmp_ln459_1_fu_170_p2() {
    icmp_ln459_1_fu_170_p2 = (!trunc_ln429_1_fu_70_p1.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln429_1_fu_70_p1.read() == ap_const_lv3_6);
}

void getSequence::thread_icmp_ln459_fu_164_p2() {
    icmp_ln459_fu_164_p2 = (!trunc_ln429_fu_66_p1.read().is_01() || !ap_const_lv3_3.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln429_fu_66_p1.read() == ap_const_lv3_3);
}

void getSequence::thread_icmp_ln464_fu_182_p2() {
    icmp_ln464_fu_182_p2 = (!trunc_ln429_1_fu_70_p1.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln429_1_fu_70_p1.read() == ap_const_lv3_7);
}

void getSequence::thread_icmp_ln469_1_fu_200_p2() {
    icmp_ln469_1_fu_200_p2 = (!trunc_ln429_1_fu_70_p1.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln429_1_fu_70_p1.read() == ap_const_lv3_0);
}

void getSequence::thread_icmp_ln469_fu_194_p2() {
    icmp_ln469_fu_194_p2 = (!trunc_ln429_fu_66_p1.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln429_fu_66_p1.read() == ap_const_lv3_4);
}

void getSequence::thread_icmp_ln479_fu_218_p2() {
    icmp_ln479_fu_218_p2 = (!trunc_ln429_fu_66_p1.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln429_fu_66_p1.read() == ap_const_lv3_5);
}

void getSequence::thread_icmp_ln489_fu_236_p2() {
    icmp_ln489_fu_236_p2 = (!trunc_ln429_fu_66_p1.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln429_fu_66_p1.read() == ap_const_lv3_6);
}

void getSequence::thread_icmp_ln499_fu_254_p2() {
    icmp_ln499_fu_254_p2 = (!trunc_ln429_fu_66_p1.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln429_fu_66_p1.read() == ap_const_lv3_7);
}

void getSequence::thread_or_ln429_fu_74_p2() {
    or_ln429_fu_74_p2 = (trunc_ln429_fu_66_p1.read() | trunc_ln429_1_fu_70_p1.read());
}

void getSequence::thread_trunc_ln429_1_fu_70_p1() {
    trunc_ln429_1_fu_70_p1 = stateA.read().range(3-1, 0);
}

void getSequence::thread_trunc_ln429_fu_66_p1() {
    trunc_ln429_fu_66_p1 = stateB.read().range(3-1, 0);
}

void getSequence::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

}

